
ThereminCopy.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000502  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000048e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000502  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000502  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000534  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000570  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b28  00000000  00000000  000005c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000989  00000000  00000000  000010f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004bb  00000000  00000000  00001a79  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00001f34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000048c  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000039d  00000000  00000000  000024c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  0000285d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	70 c0       	rjmp	.+224    	; 0xf6 <__vector_5>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	8c d0       	rcall	.+280    	; 0x1c2 <main>
  aa:	ef c1       	rjmp	.+990    	; 0x48a <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <wait>:
}

void wait( int ms )

{
	for (int i=0; i<ms; i++)
  ae:	18 16       	cp	r1, r24
  b0:	19 06       	cpc	r1, r25
  b2:	6c f4       	brge	.+26     	; 0xce <wait+0x20>
  b4:	20 e0       	ldi	r18, 0x00	; 0
  b6:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b8:	ef ec       	ldi	r30, 0xCF	; 207
  ba:	f7 e0       	ldi	r31, 0x07	; 7
  bc:	31 97       	sbiw	r30, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <wait+0xe>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <wait+0x14>
  c2:	00 00       	nop
  c4:	2f 5f       	subi	r18, 0xFF	; 255
  c6:	3f 4f       	sbci	r19, 0xFF	; 255
  c8:	82 17       	cp	r24, r18
  ca:	93 07       	cpc	r25, r19
  cc:	a9 f7       	brne	.-22     	; 0xb8 <wait+0xa>
  ce:	08 95       	ret

000000d0 <echo>:
int distance;

void echo(void){
		
		//digitalWrite(trigPin, HIGH);
		PORTE = 0b00000100;
  d0:	84 e0       	ldi	r24, 0x04	; 4
  d2:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d4:	8f ec       	ldi	r24, 0xCF	; 207
  d6:	97 e0       	ldi	r25, 0x07	; 7
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <echo+0x8>
  dc:	00 c0       	rjmp	.+0      	; 0xde <echo+0xe>
  de:	00 00       	nop
		
		//delayMicroseconds(1000);
		_delay_us(1000);
		
		//digitalWrite(trigPin, LOW);
		PORTE = 0b00000000;
  e0:	13 b8       	out	0x03, r1	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e2:	9f ef       	ldi	r25, 0xFF	; 255
  e4:	24 e3       	ldi	r18, 0x34	; 52
  e6:	8c e0       	ldi	r24, 0x0C	; 12
  e8:	91 50       	subi	r25, 0x01	; 1
  ea:	20 40       	sbci	r18, 0x00	; 0
  ec:	80 40       	sbci	r24, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <echo+0x18>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <echo+0x22>
  f2:	00 00       	nop
  f4:	08 95       	ret

000000f6 <__vector_5>:
		_delay_ms(500);
}


ISR(INT4_vect)
{
  f6:	1f 92       	push	r1
  f8:	0f 92       	push	r0
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	0f 92       	push	r0
  fe:	11 24       	eor	r1, r1
 100:	0b b6       	in	r0, 0x3b	; 59
 102:	0f 92       	push	r0
 104:	2f 93       	push	r18
 106:	3f 93       	push	r19
 108:	4f 93       	push	r20
 10a:	5f 93       	push	r21
 10c:	6f 93       	push	r22
 10e:	7f 93       	push	r23
 110:	8f 93       	push	r24
 112:	9f 93       	push	r25
 114:	af 93       	push	r26
 116:	bf 93       	push	r27
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	ef 93       	push	r30
 11e:	ff 93       	push	r31
	if (PINE & 0b00010000)
 120:	0c 9b       	sbis	0x01, 4	; 1
 122:	0a c0       	rjmp	.+20     	; 0x138 <__vector_5+0x42>
	{
		duration = 0;
 124:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <duration+0x1>
 128:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <duration>
		TCNT1 = 0;
 12c:	1d bc       	out	0x2d, r1	; 45
 12e:	1c bc       	out	0x2c, r1	; 44
		TCCR1B |= 0b10;	
 130:	8e b5       	in	r24, 0x2e	; 46
 132:	82 60       	ori	r24, 0x02	; 2
 134:	8e bd       	out	0x2e, r24	; 46
 136:	30 c0       	rjmp	.+96     	; 0x198 <__vector_5+0xa2>
	}else
	{
		TCCR1B = 0;
 138:	1e bc       	out	0x2e, r1	; 46
		duration = TCNT1;
 13a:	cc b5       	in	r28, 0x2c	; 44
 13c:	dd b5       	in	r29, 0x2d	; 45
 13e:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <duration+0x1>
 142:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <duration>
		//todo get timer number
		distance = (duration/2) / 29.1;
 146:	be 01       	movw	r22, r28
 148:	dd 23       	and	r29, r29
 14a:	14 f4       	brge	.+4      	; 0x150 <__vector_5+0x5a>
 14c:	6f 5f       	subi	r22, 0xFF	; 255
 14e:	7f 4f       	sbci	r23, 0xFF	; 255
 150:	75 95       	asr	r23
 152:	67 95       	ror	r22
 154:	07 2e       	mov	r0, r23
 156:	00 0c       	add	r0, r0
 158:	88 0b       	sbc	r24, r24
 15a:	99 0b       	sbc	r25, r25
 15c:	e3 d0       	rcall	.+454    	; 0x324 <__floatsisf>
 15e:	2d ec       	ldi	r18, 0xCD	; 205
 160:	3c ec       	ldi	r19, 0xCC	; 204
 162:	48 ee       	ldi	r20, 0xE8	; 232
 164:	51 e4       	ldi	r21, 0x41	; 65
 166:	43 d0       	rcall	.+134    	; 0x1ee <__divsf3>
 168:	aa d0       	rcall	.+340    	; 0x2be <__fixsfsi>
 16a:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 16e:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
		PORTB = duration/10;
 172:	ce 01       	movw	r24, r28
 174:	6a e0       	ldi	r22, 0x0A	; 10
 176:	70 e0       	ldi	r23, 0x00	; 0
 178:	61 d1       	rcall	.+706    	; 0x43c <__divmodhi4>
 17a:	68 bb       	out	0x18, r22	; 24
		if (distance >= 200 || distance <= 0){
 17c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 180:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 184:	9c 01       	movw	r18, r24
 186:	21 50       	subi	r18, 0x01	; 1
 188:	31 09       	sbc	r19, r1
 18a:	27 3c       	cpi	r18, 0xC7	; 199
 18c:	31 05       	cpc	r19, r1
 18e:	18 f0       	brcs	.+6      	; 0x196 <__vector_5+0xa0>
			//Serial.println("Out of range");
			PORTA = 0b11111111;
 190:	8f ef       	ldi	r24, 0xFF	; 255
 192:	8b bb       	out	0x1b, r24	; 27
 194:	01 c0       	rjmp	.+2      	; 0x198 <__vector_5+0xa2>
		}
		else {
			//Serial.print(distance);
			//Serial.println(" cm");
			PORTA = distance;
 196:	8b bb       	out	0x1b, r24	; 27
		}
	}
}
 198:	ff 91       	pop	r31
 19a:	ef 91       	pop	r30
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	bf 91       	pop	r27
 1a2:	af 91       	pop	r26
 1a4:	9f 91       	pop	r25
 1a6:	8f 91       	pop	r24
 1a8:	7f 91       	pop	r23
 1aa:	6f 91       	pop	r22
 1ac:	5f 91       	pop	r21
 1ae:	4f 91       	pop	r20
 1b0:	3f 91       	pop	r19
 1b2:	2f 91       	pop	r18
 1b4:	0f 90       	pop	r0
 1b6:	0b be       	out	0x3b, r0	; 59
 1b8:	0f 90       	pop	r0
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	0f 90       	pop	r0
 1be:	1f 90       	pop	r1
 1c0:	18 95       	reti

000001c2 <main>:

int main(void)
{
	DDRD = 0b00000100;
 1c2:	84 e0       	ldi	r24, 0x04	; 4
 1c4:	81 bb       	out	0x11, r24	; 17
	DDRA = 0b11111111;
 1c6:	8f ef       	ldi	r24, 0xFF	; 255
 1c8:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0b11111111;
 1ca:	87 bb       	out	0x17, r24	; 23
	
	EICRB = 0b00000001;
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 0b00010000;
 1d0:	80 e1       	ldi	r24, 0x10	; 16
 1d2:	89 bf       	out	0x39, r24	; 57
	sei();
 1d4:	78 94       	sei
	
	DDRE = 0b00001000;			//set DDRD3 as output
 1d6:	88 e0       	ldi	r24, 0x08	; 8
 1d8:	82 b9       	out	0x02, r24	; 2
	TCCR3B |= 0b00000001;	//set up timer
 1da:	ea e8       	ldi	r30, 0x8A	; 138
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	81 60       	ori	r24, 0x01	; 1
 1e2:	80 83       	st	Z, r24
	while(1)
	{
		echo();
 1e4:	75 df       	rcall	.-278    	; 0xd0 <echo>
		wait(100);
 1e6:	84 e6       	ldi	r24, 0x64	; 100
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	61 df       	rcall	.-318    	; 0xae <wait>
 1ec:	fb cf       	rjmp	.-10     	; 0x1e4 <main+0x22>

000001ee <__divsf3>:
 1ee:	0c d0       	rcall	.+24     	; 0x208 <__divsf3x>
 1f0:	eb c0       	rjmp	.+470    	; 0x3c8 <__fp_round>
 1f2:	e3 d0       	rcall	.+454    	; 0x3ba <__fp_pscB>
 1f4:	40 f0       	brcs	.+16     	; 0x206 <__divsf3+0x18>
 1f6:	da d0       	rcall	.+436    	; 0x3ac <__fp_pscA>
 1f8:	30 f0       	brcs	.+12     	; 0x206 <__divsf3+0x18>
 1fa:	21 f4       	brne	.+8      	; 0x204 <__divsf3+0x16>
 1fc:	5f 3f       	cpi	r21, 0xFF	; 255
 1fe:	19 f0       	breq	.+6      	; 0x206 <__divsf3+0x18>
 200:	cc c0       	rjmp	.+408    	; 0x39a <__fp_inf>
 202:	51 11       	cpse	r21, r1
 204:	15 c1       	rjmp	.+554    	; 0x430 <__fp_szero>
 206:	cf c0       	rjmp	.+414    	; 0x3a6 <__fp_nan>

00000208 <__divsf3x>:
 208:	f0 d0       	rcall	.+480    	; 0x3ea <__fp_split3>
 20a:	98 f3       	brcs	.-26     	; 0x1f2 <__divsf3+0x4>

0000020c <__divsf3_pse>:
 20c:	99 23       	and	r25, r25
 20e:	c9 f3       	breq	.-14     	; 0x202 <__divsf3+0x14>
 210:	55 23       	and	r21, r21
 212:	b1 f3       	breq	.-20     	; 0x200 <__divsf3+0x12>
 214:	95 1b       	sub	r25, r21
 216:	55 0b       	sbc	r21, r21
 218:	bb 27       	eor	r27, r27
 21a:	aa 27       	eor	r26, r26
 21c:	62 17       	cp	r22, r18
 21e:	73 07       	cpc	r23, r19
 220:	84 07       	cpc	r24, r20
 222:	38 f0       	brcs	.+14     	; 0x232 <__divsf3_pse+0x26>
 224:	9f 5f       	subi	r25, 0xFF	; 255
 226:	5f 4f       	sbci	r21, 0xFF	; 255
 228:	22 0f       	add	r18, r18
 22a:	33 1f       	adc	r19, r19
 22c:	44 1f       	adc	r20, r20
 22e:	aa 1f       	adc	r26, r26
 230:	a9 f3       	breq	.-22     	; 0x21c <__divsf3_pse+0x10>
 232:	33 d0       	rcall	.+102    	; 0x29a <__divsf3_pse+0x8e>
 234:	0e 2e       	mov	r0, r30
 236:	3a f0       	brmi	.+14     	; 0x246 <__divsf3_pse+0x3a>
 238:	e0 e8       	ldi	r30, 0x80	; 128
 23a:	30 d0       	rcall	.+96     	; 0x29c <__divsf3_pse+0x90>
 23c:	91 50       	subi	r25, 0x01	; 1
 23e:	50 40       	sbci	r21, 0x00	; 0
 240:	e6 95       	lsr	r30
 242:	00 1c       	adc	r0, r0
 244:	ca f7       	brpl	.-14     	; 0x238 <__divsf3_pse+0x2c>
 246:	29 d0       	rcall	.+82     	; 0x29a <__divsf3_pse+0x8e>
 248:	fe 2f       	mov	r31, r30
 24a:	27 d0       	rcall	.+78     	; 0x29a <__divsf3_pse+0x8e>
 24c:	66 0f       	add	r22, r22
 24e:	77 1f       	adc	r23, r23
 250:	88 1f       	adc	r24, r24
 252:	bb 1f       	adc	r27, r27
 254:	26 17       	cp	r18, r22
 256:	37 07       	cpc	r19, r23
 258:	48 07       	cpc	r20, r24
 25a:	ab 07       	cpc	r26, r27
 25c:	b0 e8       	ldi	r27, 0x80	; 128
 25e:	09 f0       	breq	.+2      	; 0x262 <__divsf3_pse+0x56>
 260:	bb 0b       	sbc	r27, r27
 262:	80 2d       	mov	r24, r0
 264:	bf 01       	movw	r22, r30
 266:	ff 27       	eor	r31, r31
 268:	93 58       	subi	r25, 0x83	; 131
 26a:	5f 4f       	sbci	r21, 0xFF	; 255
 26c:	2a f0       	brmi	.+10     	; 0x278 <__divsf3_pse+0x6c>
 26e:	9e 3f       	cpi	r25, 0xFE	; 254
 270:	51 05       	cpc	r21, r1
 272:	68 f0       	brcs	.+26     	; 0x28e <__divsf3_pse+0x82>
 274:	92 c0       	rjmp	.+292    	; 0x39a <__fp_inf>
 276:	dc c0       	rjmp	.+440    	; 0x430 <__fp_szero>
 278:	5f 3f       	cpi	r21, 0xFF	; 255
 27a:	ec f3       	brlt	.-6      	; 0x276 <__divsf3_pse+0x6a>
 27c:	98 3e       	cpi	r25, 0xE8	; 232
 27e:	dc f3       	brlt	.-10     	; 0x276 <__divsf3_pse+0x6a>
 280:	86 95       	lsr	r24
 282:	77 95       	ror	r23
 284:	67 95       	ror	r22
 286:	b7 95       	ror	r27
 288:	f7 95       	ror	r31
 28a:	9f 5f       	subi	r25, 0xFF	; 255
 28c:	c9 f7       	brne	.-14     	; 0x280 <__divsf3_pse+0x74>
 28e:	88 0f       	add	r24, r24
 290:	91 1d       	adc	r25, r1
 292:	96 95       	lsr	r25
 294:	87 95       	ror	r24
 296:	97 f9       	bld	r25, 7
 298:	08 95       	ret
 29a:	e1 e0       	ldi	r30, 0x01	; 1
 29c:	66 0f       	add	r22, r22
 29e:	77 1f       	adc	r23, r23
 2a0:	88 1f       	adc	r24, r24
 2a2:	bb 1f       	adc	r27, r27
 2a4:	62 17       	cp	r22, r18
 2a6:	73 07       	cpc	r23, r19
 2a8:	84 07       	cpc	r24, r20
 2aa:	ba 07       	cpc	r27, r26
 2ac:	20 f0       	brcs	.+8      	; 0x2b6 <__divsf3_pse+0xaa>
 2ae:	62 1b       	sub	r22, r18
 2b0:	73 0b       	sbc	r23, r19
 2b2:	84 0b       	sbc	r24, r20
 2b4:	ba 0b       	sbc	r27, r26
 2b6:	ee 1f       	adc	r30, r30
 2b8:	88 f7       	brcc	.-30     	; 0x29c <__divsf3_pse+0x90>
 2ba:	e0 95       	com	r30
 2bc:	08 95       	ret

000002be <__fixsfsi>:
 2be:	04 d0       	rcall	.+8      	; 0x2c8 <__fixunssfsi>
 2c0:	68 94       	set
 2c2:	b1 11       	cpse	r27, r1
 2c4:	b5 c0       	rjmp	.+362    	; 0x430 <__fp_szero>
 2c6:	08 95       	ret

000002c8 <__fixunssfsi>:
 2c8:	98 d0       	rcall	.+304    	; 0x3fa <__fp_splitA>
 2ca:	88 f0       	brcs	.+34     	; 0x2ee <__fixunssfsi+0x26>
 2cc:	9f 57       	subi	r25, 0x7F	; 127
 2ce:	90 f0       	brcs	.+36     	; 0x2f4 <__fixunssfsi+0x2c>
 2d0:	b9 2f       	mov	r27, r25
 2d2:	99 27       	eor	r25, r25
 2d4:	b7 51       	subi	r27, 0x17	; 23
 2d6:	a0 f0       	brcs	.+40     	; 0x300 <__fixunssfsi+0x38>
 2d8:	d1 f0       	breq	.+52     	; 0x30e <__fixunssfsi+0x46>
 2da:	66 0f       	add	r22, r22
 2dc:	77 1f       	adc	r23, r23
 2de:	88 1f       	adc	r24, r24
 2e0:	99 1f       	adc	r25, r25
 2e2:	1a f0       	brmi	.+6      	; 0x2ea <__fixunssfsi+0x22>
 2e4:	ba 95       	dec	r27
 2e6:	c9 f7       	brne	.-14     	; 0x2da <__fixunssfsi+0x12>
 2e8:	12 c0       	rjmp	.+36     	; 0x30e <__fixunssfsi+0x46>
 2ea:	b1 30       	cpi	r27, 0x01	; 1
 2ec:	81 f0       	breq	.+32     	; 0x30e <__fixunssfsi+0x46>
 2ee:	9f d0       	rcall	.+318    	; 0x42e <__fp_zero>
 2f0:	b1 e0       	ldi	r27, 0x01	; 1
 2f2:	08 95       	ret
 2f4:	9c c0       	rjmp	.+312    	; 0x42e <__fp_zero>
 2f6:	67 2f       	mov	r22, r23
 2f8:	78 2f       	mov	r23, r24
 2fa:	88 27       	eor	r24, r24
 2fc:	b8 5f       	subi	r27, 0xF8	; 248
 2fe:	39 f0       	breq	.+14     	; 0x30e <__fixunssfsi+0x46>
 300:	b9 3f       	cpi	r27, 0xF9	; 249
 302:	cc f3       	brlt	.-14     	; 0x2f6 <__fixunssfsi+0x2e>
 304:	86 95       	lsr	r24
 306:	77 95       	ror	r23
 308:	67 95       	ror	r22
 30a:	b3 95       	inc	r27
 30c:	d9 f7       	brne	.-10     	; 0x304 <__fixunssfsi+0x3c>
 30e:	3e f4       	brtc	.+14     	; 0x31e <__fixunssfsi+0x56>
 310:	90 95       	com	r25
 312:	80 95       	com	r24
 314:	70 95       	com	r23
 316:	61 95       	neg	r22
 318:	7f 4f       	sbci	r23, 0xFF	; 255
 31a:	8f 4f       	sbci	r24, 0xFF	; 255
 31c:	9f 4f       	sbci	r25, 0xFF	; 255
 31e:	08 95       	ret

00000320 <__floatunsisf>:
 320:	e8 94       	clt
 322:	09 c0       	rjmp	.+18     	; 0x336 <__floatsisf+0x12>

00000324 <__floatsisf>:
 324:	97 fb       	bst	r25, 7
 326:	3e f4       	brtc	.+14     	; 0x336 <__floatsisf+0x12>
 328:	90 95       	com	r25
 32a:	80 95       	com	r24
 32c:	70 95       	com	r23
 32e:	61 95       	neg	r22
 330:	7f 4f       	sbci	r23, 0xFF	; 255
 332:	8f 4f       	sbci	r24, 0xFF	; 255
 334:	9f 4f       	sbci	r25, 0xFF	; 255
 336:	99 23       	and	r25, r25
 338:	a9 f0       	breq	.+42     	; 0x364 <__floatsisf+0x40>
 33a:	f9 2f       	mov	r31, r25
 33c:	96 e9       	ldi	r25, 0x96	; 150
 33e:	bb 27       	eor	r27, r27
 340:	93 95       	inc	r25
 342:	f6 95       	lsr	r31
 344:	87 95       	ror	r24
 346:	77 95       	ror	r23
 348:	67 95       	ror	r22
 34a:	b7 95       	ror	r27
 34c:	f1 11       	cpse	r31, r1
 34e:	f8 cf       	rjmp	.-16     	; 0x340 <__floatsisf+0x1c>
 350:	fa f4       	brpl	.+62     	; 0x390 <__floatsisf+0x6c>
 352:	bb 0f       	add	r27, r27
 354:	11 f4       	brne	.+4      	; 0x35a <__floatsisf+0x36>
 356:	60 ff       	sbrs	r22, 0
 358:	1b c0       	rjmp	.+54     	; 0x390 <__floatsisf+0x6c>
 35a:	6f 5f       	subi	r22, 0xFF	; 255
 35c:	7f 4f       	sbci	r23, 0xFF	; 255
 35e:	8f 4f       	sbci	r24, 0xFF	; 255
 360:	9f 4f       	sbci	r25, 0xFF	; 255
 362:	16 c0       	rjmp	.+44     	; 0x390 <__floatsisf+0x6c>
 364:	88 23       	and	r24, r24
 366:	11 f0       	breq	.+4      	; 0x36c <__floatsisf+0x48>
 368:	96 e9       	ldi	r25, 0x96	; 150
 36a:	11 c0       	rjmp	.+34     	; 0x38e <__floatsisf+0x6a>
 36c:	77 23       	and	r23, r23
 36e:	21 f0       	breq	.+8      	; 0x378 <__floatsisf+0x54>
 370:	9e e8       	ldi	r25, 0x8E	; 142
 372:	87 2f       	mov	r24, r23
 374:	76 2f       	mov	r23, r22
 376:	05 c0       	rjmp	.+10     	; 0x382 <__floatsisf+0x5e>
 378:	66 23       	and	r22, r22
 37a:	71 f0       	breq	.+28     	; 0x398 <__floatsisf+0x74>
 37c:	96 e8       	ldi	r25, 0x86	; 134
 37e:	86 2f       	mov	r24, r22
 380:	70 e0       	ldi	r23, 0x00	; 0
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	2a f0       	brmi	.+10     	; 0x390 <__floatsisf+0x6c>
 386:	9a 95       	dec	r25
 388:	66 0f       	add	r22, r22
 38a:	77 1f       	adc	r23, r23
 38c:	88 1f       	adc	r24, r24
 38e:	da f7       	brpl	.-10     	; 0x386 <__floatsisf+0x62>
 390:	88 0f       	add	r24, r24
 392:	96 95       	lsr	r25
 394:	87 95       	ror	r24
 396:	97 f9       	bld	r25, 7
 398:	08 95       	ret

0000039a <__fp_inf>:
 39a:	97 f9       	bld	r25, 7
 39c:	9f 67       	ori	r25, 0x7F	; 127
 39e:	80 e8       	ldi	r24, 0x80	; 128
 3a0:	70 e0       	ldi	r23, 0x00	; 0
 3a2:	60 e0       	ldi	r22, 0x00	; 0
 3a4:	08 95       	ret

000003a6 <__fp_nan>:
 3a6:	9f ef       	ldi	r25, 0xFF	; 255
 3a8:	80 ec       	ldi	r24, 0xC0	; 192
 3aa:	08 95       	ret

000003ac <__fp_pscA>:
 3ac:	00 24       	eor	r0, r0
 3ae:	0a 94       	dec	r0
 3b0:	16 16       	cp	r1, r22
 3b2:	17 06       	cpc	r1, r23
 3b4:	18 06       	cpc	r1, r24
 3b6:	09 06       	cpc	r0, r25
 3b8:	08 95       	ret

000003ba <__fp_pscB>:
 3ba:	00 24       	eor	r0, r0
 3bc:	0a 94       	dec	r0
 3be:	12 16       	cp	r1, r18
 3c0:	13 06       	cpc	r1, r19
 3c2:	14 06       	cpc	r1, r20
 3c4:	05 06       	cpc	r0, r21
 3c6:	08 95       	ret

000003c8 <__fp_round>:
 3c8:	09 2e       	mov	r0, r25
 3ca:	03 94       	inc	r0
 3cc:	00 0c       	add	r0, r0
 3ce:	11 f4       	brne	.+4      	; 0x3d4 <__fp_round+0xc>
 3d0:	88 23       	and	r24, r24
 3d2:	52 f0       	brmi	.+20     	; 0x3e8 <__fp_round+0x20>
 3d4:	bb 0f       	add	r27, r27
 3d6:	40 f4       	brcc	.+16     	; 0x3e8 <__fp_round+0x20>
 3d8:	bf 2b       	or	r27, r31
 3da:	11 f4       	brne	.+4      	; 0x3e0 <__fp_round+0x18>
 3dc:	60 ff       	sbrs	r22, 0
 3de:	04 c0       	rjmp	.+8      	; 0x3e8 <__fp_round+0x20>
 3e0:	6f 5f       	subi	r22, 0xFF	; 255
 3e2:	7f 4f       	sbci	r23, 0xFF	; 255
 3e4:	8f 4f       	sbci	r24, 0xFF	; 255
 3e6:	9f 4f       	sbci	r25, 0xFF	; 255
 3e8:	08 95       	ret

000003ea <__fp_split3>:
 3ea:	57 fd       	sbrc	r21, 7
 3ec:	90 58       	subi	r25, 0x80	; 128
 3ee:	44 0f       	add	r20, r20
 3f0:	55 1f       	adc	r21, r21
 3f2:	59 f0       	breq	.+22     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f4:	5f 3f       	cpi	r21, 0xFF	; 255
 3f6:	71 f0       	breq	.+28     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3f8:	47 95       	ror	r20

000003fa <__fp_splitA>:
 3fa:	88 0f       	add	r24, r24
 3fc:	97 fb       	bst	r25, 7
 3fe:	99 1f       	adc	r25, r25
 400:	61 f0       	breq	.+24     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 402:	9f 3f       	cpi	r25, 0xFF	; 255
 404:	79 f0       	breq	.+30     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 406:	87 95       	ror	r24
 408:	08 95       	ret
 40a:	12 16       	cp	r1, r18
 40c:	13 06       	cpc	r1, r19
 40e:	14 06       	cpc	r1, r20
 410:	55 1f       	adc	r21, r21
 412:	f2 cf       	rjmp	.-28     	; 0x3f8 <__fp_split3+0xe>
 414:	46 95       	lsr	r20
 416:	f1 df       	rcall	.-30     	; 0x3fa <__fp_splitA>
 418:	08 c0       	rjmp	.+16     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41a:	16 16       	cp	r1, r22
 41c:	17 06       	cpc	r1, r23
 41e:	18 06       	cpc	r1, r24
 420:	99 1f       	adc	r25, r25
 422:	f1 cf       	rjmp	.-30     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 424:	86 95       	lsr	r24
 426:	71 05       	cpc	r23, r1
 428:	61 05       	cpc	r22, r1
 42a:	08 94       	sec
 42c:	08 95       	ret

0000042e <__fp_zero>:
 42e:	e8 94       	clt

00000430 <__fp_szero>:
 430:	bb 27       	eor	r27, r27
 432:	66 27       	eor	r22, r22
 434:	77 27       	eor	r23, r23
 436:	cb 01       	movw	r24, r22
 438:	97 f9       	bld	r25, 7
 43a:	08 95       	ret

0000043c <__divmodhi4>:
 43c:	97 fb       	bst	r25, 7
 43e:	07 2e       	mov	r0, r23
 440:	16 f4       	brtc	.+4      	; 0x446 <__divmodhi4+0xa>
 442:	00 94       	com	r0
 444:	06 d0       	rcall	.+12     	; 0x452 <__divmodhi4_neg1>
 446:	77 fd       	sbrc	r23, 7
 448:	08 d0       	rcall	.+16     	; 0x45a <__divmodhi4_neg2>
 44a:	0b d0       	rcall	.+22     	; 0x462 <__udivmodhi4>
 44c:	07 fc       	sbrc	r0, 7
 44e:	05 d0       	rcall	.+10     	; 0x45a <__divmodhi4_neg2>
 450:	3e f4       	brtc	.+14     	; 0x460 <__divmodhi4_exit>

00000452 <__divmodhi4_neg1>:
 452:	90 95       	com	r25
 454:	81 95       	neg	r24
 456:	9f 4f       	sbci	r25, 0xFF	; 255
 458:	08 95       	ret

0000045a <__divmodhi4_neg2>:
 45a:	70 95       	com	r23
 45c:	61 95       	neg	r22
 45e:	7f 4f       	sbci	r23, 0xFF	; 255

00000460 <__divmodhi4_exit>:
 460:	08 95       	ret

00000462 <__udivmodhi4>:
 462:	aa 1b       	sub	r26, r26
 464:	bb 1b       	sub	r27, r27
 466:	51 e1       	ldi	r21, 0x11	; 17
 468:	07 c0       	rjmp	.+14     	; 0x478 <__udivmodhi4_ep>

0000046a <__udivmodhi4_loop>:
 46a:	aa 1f       	adc	r26, r26
 46c:	bb 1f       	adc	r27, r27
 46e:	a6 17       	cp	r26, r22
 470:	b7 07       	cpc	r27, r23
 472:	10 f0       	brcs	.+4      	; 0x478 <__udivmodhi4_ep>
 474:	a6 1b       	sub	r26, r22
 476:	b7 0b       	sbc	r27, r23

00000478 <__udivmodhi4_ep>:
 478:	88 1f       	adc	r24, r24
 47a:	99 1f       	adc	r25, r25
 47c:	5a 95       	dec	r21
 47e:	a9 f7       	brne	.-22     	; 0x46a <__udivmodhi4_loop>
 480:	80 95       	com	r24
 482:	90 95       	com	r25
 484:	bc 01       	movw	r22, r24
 486:	cd 01       	movw	r24, r26
 488:	08 95       	ret

0000048a <_exit>:
 48a:	f8 94       	cli

0000048c <__stop_program>:
 48c:	ff cf       	rjmp	.-2      	; 0x48c <__stop_program>
