
ThereminCopy.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000058a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  000005fe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000630  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  0000066c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000094a  00000000  00000000  0000069c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000835  00000000  00000000  00000fe6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a7  00000000  00000000  0000181b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00001bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000455  00000000  00000000  00001c58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000018e  00000000  00000000  000020ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  0000223b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4c c0       	rjmp	.+152    	; 0xae <__vector_5>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a6 30       	cpi	r26, 0x06	; 6
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	68 d0       	rcall	.+208    	; 0x17a <main>
  aa:	6d c2       	rjmp	.+1242   	; 0x586 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <__vector_5>:
		TCNT1 = 0;
}


ISR(INT4_vect)
{
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	0b b6       	in	r0, 0x3b	; 59
  ba:	0f 92       	push	r0
  bc:	2f 93       	push	r18
  be:	3f 93       	push	r19
  c0:	4f 93       	push	r20
  c2:	5f 93       	push	r21
  c4:	6f 93       	push	r22
  c6:	7f 93       	push	r23
  c8:	8f 93       	push	r24
  ca:	9f 93       	push	r25
  cc:	af 93       	push	r26
  ce:	bf 93       	push	r27
  d0:	cf 93       	push	r28
  d2:	df 93       	push	r29
  d4:	ef 93       	push	r30
  d6:	ff 93       	push	r31
	if (PINE & 0b00010000)
  d8:	0c 9b       	sbis	0x01, 4	; 1
  da:	0a c0       	rjmp	.+20     	; 0xf0 <__vector_5+0x42>
	{
		duration = 0;
  dc:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <duration+0x1>
  e0:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <duration>
		TCNT1 = 0;
  e4:	1d bc       	out	0x2d, r1	; 45
  e6:	1c bc       	out	0x2c, r1	; 44
		TCCR1B |= 0b10;	
  e8:	8e b5       	in	r24, 0x2e	; 46
  ea:	82 60       	ori	r24, 0x02	; 2
  ec:	8e bd       	out	0x2e, r24	; 46
  ee:	30 c0       	rjmp	.+96     	; 0x150 <__vector_5+0xa2>
	}else
	{
		TCCR1B = 0;
  f0:	1e bc       	out	0x2e, r1	; 46
		duration = TCNT1;
  f2:	cc b5       	in	r28, 0x2c	; 44
  f4:	dd b5       	in	r29, 0x2d	; 45
  f6:	d0 93 05 01 	sts	0x0105, r29	; 0x800105 <duration+0x1>
  fa:	c0 93 04 01 	sts	0x0104, r28	; 0x800104 <duration>
		//todo get timer number
		distance = (duration/2) / 29.1;
  fe:	be 01       	movw	r22, r28
 100:	dd 23       	and	r29, r29
 102:	14 f4       	brge	.+4      	; 0x108 <__vector_5+0x5a>
 104:	6f 5f       	subi	r22, 0xFF	; 255
 106:	7f 4f       	sbci	r23, 0xFF	; 255
 108:	75 95       	asr	r23
 10a:	67 95       	ror	r22
 10c:	07 2e       	mov	r0, r23
 10e:	00 0c       	add	r0, r0
 110:	88 0b       	sbc	r24, r24
 112:	99 0b       	sbc	r25, r25
 114:	47 d1       	rcall	.+654    	; 0x3a4 <__floatsisf>
 116:	2d ec       	ldi	r18, 0xCD	; 205
 118:	3c ec       	ldi	r19, 0xCC	; 204
 11a:	48 ee       	ldi	r20, 0xE8	; 232
 11c:	51 e4       	ldi	r21, 0x41	; 65
 11e:	a7 d0       	rcall	.+334    	; 0x26e <__divsf3>
 120:	0e d1       	rcall	.+540    	; 0x33e <__fixsfsi>
 122:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <distance+0x1>
 126:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <distance>
		PORTB = duration/10;
 12a:	ce 01       	movw	r24, r28
 12c:	6a e0       	ldi	r22, 0x0A	; 10
 12e:	70 e0       	ldi	r23, 0x00	; 0
 130:	c5 d1       	rcall	.+906    	; 0x4bc <__divmodhi4>
 132:	68 bb       	out	0x18, r22	; 24
		if (distance >= 200 || distance <= 0){
 134:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <distance>
 138:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <distance+0x1>
 13c:	9c 01       	movw	r18, r24
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	31 09       	sbc	r19, r1
 142:	27 3c       	cpi	r18, 0xC7	; 199
 144:	31 05       	cpc	r19, r1
 146:	18 f0       	brcs	.+6      	; 0x14e <__vector_5+0xa0>
			//Serial.println("Out of range");
			PORTA = 0b11111111;
 148:	8f ef       	ldi	r24, 0xFF	; 255
 14a:	8b bb       	out	0x1b, r24	; 27
 14c:	01 c0       	rjmp	.+2      	; 0x150 <__vector_5+0xa2>
		}
		else {
			//Serial.print(distance);
			//Serial.println(" cm");
			PORTA = distance;
 14e:	8b bb       	out	0x1b, r24	; 27
		}
	}
}
 150:	ff 91       	pop	r31
 152:	ef 91       	pop	r30
 154:	df 91       	pop	r29
 156:	cf 91       	pop	r28
 158:	bf 91       	pop	r27
 15a:	af 91       	pop	r26
 15c:	9f 91       	pop	r25
 15e:	8f 91       	pop	r24
 160:	7f 91       	pop	r23
 162:	6f 91       	pop	r22
 164:	5f 91       	pop	r21
 166:	4f 91       	pop	r20
 168:	3f 91       	pop	r19
 16a:	2f 91       	pop	r18
 16c:	0f 90       	pop	r0
 16e:	0b be       	out	0x3b, r0	; 59
 170:	0f 90       	pop	r0
 172:	0f be       	out	0x3f, r0	; 63
 174:	0f 90       	pop	r0
 176:	1f 90       	pop	r1
 178:	18 95       	reti

0000017a <main>:

int main(void)
{
	DDRD = 0b00000100;
 17a:	84 e0       	ldi	r24, 0x04	; 4
 17c:	81 bb       	out	0x11, r24	; 17
	DDRA = 0b11111111;
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0b11111111;
 182:	87 bb       	out	0x17, r24	; 23
	
	EICRB = 0b00000001;
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 0b00010000;
 188:	80 e1       	ldi	r24, 0x10	; 16
 18a:	89 bf       	out	0x39, r24	; 57
	sei();
 18c:	78 94       	sei
	
	DDRF = 0b00001000;			//set DDRD3 as output
 18e:	88 e0       	ldi	r24, 0x08	; 8
 190:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	TCCR3B |= 0b00000001;	//set up timer
 194:	ea e8       	ldi	r30, 0x8A	; 138
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	81 60       	ori	r24, 0x01	; 1
 19c:	80 83       	st	Z, r24
	
	long time = 0;
 19e:	81 2c       	mov	r8, r1
 1a0:	91 2c       	mov	r9, r1
 1a2:	54 01       	movw	r10, r8
	while(1)
	{
		//echo();
		
		if(PORTA < 60){
			frequency = 1050 - (PORTA * 4);
 1a4:	0a e1       	ldi	r16, 0x1A	; 26
 1a6:	14 e0       	ldi	r17, 0x04	; 4
		}
		if(frequency > 100 && PORTA < 60)
		{
			time += 1000000/frequency/2;
 1a8:	0f 2e       	mov	r0, r31
 1aa:	f0 e2       	ldi	r31, 0x20	; 32
 1ac:	4f 2e       	mov	r4, r31
 1ae:	f1 ea       	ldi	r31, 0xA1	; 161
 1b0:	5f 2e       	mov	r5, r31
 1b2:	f7 e0       	ldi	r31, 0x07	; 7
 1b4:	6f 2e       	mov	r6, r31
 1b6:	71 2c       	mov	r7, r1
 1b8:	f0 2d       	mov	r31, r0
			delay_us(1000000/frequency/2);
			PORTF ^= (0b00001000);
 1ba:	c2 e6       	ldi	r28, 0x62	; 98
 1bc:	d0 e0       	ldi	r29, 0x00	; 0
 1be:	68 94       	set
 1c0:	cc 24       	eor	r12, r12
 1c2:	c3 f8       	bld	r12, 3
			//t += TCNT3;
			TCNT3 = 0;
 1c4:	0f 2e       	mov	r0, r31
 1c6:	f8 e8       	ldi	r31, 0x88	; 136
 1c8:	ef 2e       	mov	r14, r31
 1ca:	f1 2c       	mov	r15, r1
 1cc:	f0 2d       	mov	r31, r0
		}
		if(time >= 100000){
			PORTE = 0b00000100;
 1ce:	68 94       	set
 1d0:	dd 24       	eor	r13, r13
 1d2:	d2 f8       	bld	r13, 2
	int echos = 0;
	while(1)
	{
		//echo();
		
		if(PORTA < 60){
 1d4:	8b b3       	in	r24, 0x1b	; 27
 1d6:	8c 33       	cpi	r24, 0x3C	; 60
 1d8:	58 f4       	brcc	.+22     	; 0x1f0 <main+0x76>
			frequency = 1050 - (PORTA * 4);
 1da:	8b b3       	in	r24, 0x1b	; 27
 1dc:	98 01       	movw	r18, r16
 1de:	44 e0       	ldi	r20, 0x04	; 4
 1e0:	84 9f       	mul	r24, r20
 1e2:	20 19       	sub	r18, r0
 1e4:	31 09       	sbc	r19, r1
 1e6:	11 24       	eor	r1, r1
 1e8:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <_edata+0x1>
 1ec:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <_edata>
		}
		if(frequency > 100 && PORTA < 60)
 1f0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
 1f4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <_edata+0x1>
 1f8:	25 36       	cpi	r18, 0x65	; 101
 1fa:	31 05       	cpc	r19, r1
 1fc:	f4 f0       	brlt	.+60     	; 0x23a <main+0xc0>
 1fe:	8b b3       	in	r24, 0x1b	; 27
 200:	8c 33       	cpi	r24, 0x3C	; 60
 202:	d8 f4       	brcc	.+54     	; 0x23a <main+0xc0>
		{
			time += 1000000/frequency/2;
 204:	03 2e       	mov	r0, r19
 206:	00 0c       	add	r0, r0
 208:	44 0b       	sbc	r20, r20
 20a:	55 0b       	sbc	r21, r21
 20c:	c3 01       	movw	r24, r6
 20e:	b2 01       	movw	r22, r4
 210:	68 d1       	rcall	.+720    	; 0x4e2 <__divmodsi4>
 212:	82 0e       	add	r8, r18
 214:	93 1e       	adc	r9, r19
 216:	a4 1e       	adc	r10, r20
 218:	b5 1e       	adc	r11, r21
int duration;
int distance;
int frequency = 0;

inline static void delay_us(int count) {
	while(count--) {
 21a:	21 15       	cp	r18, r1
 21c:	31 05       	cpc	r19, r1
 21e:	39 f0       	breq	.+14     	; 0x22e <main+0xb4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 220:	82 e0       	ldi	r24, 0x02	; 2
 222:	8a 95       	dec	r24
 224:	f1 f7       	brne	.-4      	; 0x222 <main+0xa8>
 226:	00 c0       	rjmp	.+0      	; 0x228 <main+0xae>
 228:	21 50       	subi	r18, 0x01	; 1
 22a:	31 09       	sbc	r19, r1
 22c:	c9 f7       	brne	.-14     	; 0x220 <main+0xa6>
		}
		if(frequency > 100 && PORTA < 60)
		{
			time += 1000000/frequency/2;
			delay_us(1000000/frequency/2);
			PORTF ^= (0b00001000);
 22e:	88 81       	ld	r24, Y
 230:	8c 25       	eor	r24, r12
 232:	88 83       	st	Y, r24
			//t += TCNT3;
			TCNT3 = 0;
 234:	f7 01       	movw	r30, r14
 236:	11 82       	std	Z+1, r1	; 0x01
 238:	10 82       	st	Z, r1
		}
		if(time >= 100000){
 23a:	f0 ea       	ldi	r31, 0xA0	; 160
 23c:	8f 16       	cp	r8, r31
 23e:	f6 e8       	ldi	r31, 0x86	; 134
 240:	9f 06       	cpc	r9, r31
 242:	f1 e0       	ldi	r31, 0x01	; 1
 244:	af 06       	cpc	r10, r31
 246:	b1 04       	cpc	r11, r1
 248:	14 f0       	brlt	.+4      	; 0x24e <main+0xd4>
			PORTE = 0b00000100;
 24a:	d3 b8       	out	0x03, r13	; 3
 24c:	c3 cf       	rjmp	.-122    	; 0x1d4 <main+0x5a>
		}else if (time >= 101000){
 24e:	28 e8       	ldi	r18, 0x88	; 136
 250:	82 16       	cp	r8, r18
 252:	2a e8       	ldi	r18, 0x8A	; 138
 254:	92 06       	cpc	r9, r18
 256:	21 e0       	ldi	r18, 0x01	; 1
 258:	a2 06       	cpc	r10, r18
 25a:	b1 04       	cpc	r11, r1
 25c:	0c f4       	brge	.+2      	; 0x260 <main+0xe6>
 25e:	ba cf       	rjmp	.-140    	; 0x1d4 <main+0x5a>
			PORTE = 0b00000000;
 260:	13 b8       	out	0x03, r1	; 3
			TCNT1 = 0;
 262:	1d bc       	out	0x2d, r1	; 45
 264:	1c bc       	out	0x2c, r1	; 44
			time = 0;
 266:	81 2c       	mov	r8, r1
 268:	91 2c       	mov	r9, r1
 26a:	54 01       	movw	r10, r8
 26c:	b3 cf       	rjmp	.-154    	; 0x1d4 <main+0x5a>

0000026e <__divsf3>:
 26e:	0c d0       	rcall	.+24     	; 0x288 <__divsf3x>
 270:	eb c0       	rjmp	.+470    	; 0x448 <__fp_round>
 272:	e3 d0       	rcall	.+454    	; 0x43a <__fp_pscB>
 274:	40 f0       	brcs	.+16     	; 0x286 <__divsf3+0x18>
 276:	da d0       	rcall	.+436    	; 0x42c <__fp_pscA>
 278:	30 f0       	brcs	.+12     	; 0x286 <__divsf3+0x18>
 27a:	21 f4       	brne	.+8      	; 0x284 <__divsf3+0x16>
 27c:	5f 3f       	cpi	r21, 0xFF	; 255
 27e:	19 f0       	breq	.+6      	; 0x286 <__divsf3+0x18>
 280:	cc c0       	rjmp	.+408    	; 0x41a <__fp_inf>
 282:	51 11       	cpse	r21, r1
 284:	15 c1       	rjmp	.+554    	; 0x4b0 <__fp_szero>
 286:	cf c0       	rjmp	.+414    	; 0x426 <__fp_nan>

00000288 <__divsf3x>:
 288:	f0 d0       	rcall	.+480    	; 0x46a <__fp_split3>
 28a:	98 f3       	brcs	.-26     	; 0x272 <__divsf3+0x4>

0000028c <__divsf3_pse>:
 28c:	99 23       	and	r25, r25
 28e:	c9 f3       	breq	.-14     	; 0x282 <__divsf3+0x14>
 290:	55 23       	and	r21, r21
 292:	b1 f3       	breq	.-20     	; 0x280 <__divsf3+0x12>
 294:	95 1b       	sub	r25, r21
 296:	55 0b       	sbc	r21, r21
 298:	bb 27       	eor	r27, r27
 29a:	aa 27       	eor	r26, r26
 29c:	62 17       	cp	r22, r18
 29e:	73 07       	cpc	r23, r19
 2a0:	84 07       	cpc	r24, r20
 2a2:	38 f0       	brcs	.+14     	; 0x2b2 <__divsf3_pse+0x26>
 2a4:	9f 5f       	subi	r25, 0xFF	; 255
 2a6:	5f 4f       	sbci	r21, 0xFF	; 255
 2a8:	22 0f       	add	r18, r18
 2aa:	33 1f       	adc	r19, r19
 2ac:	44 1f       	adc	r20, r20
 2ae:	aa 1f       	adc	r26, r26
 2b0:	a9 f3       	breq	.-22     	; 0x29c <__divsf3_pse+0x10>
 2b2:	33 d0       	rcall	.+102    	; 0x31a <__divsf3_pse+0x8e>
 2b4:	0e 2e       	mov	r0, r30
 2b6:	3a f0       	brmi	.+14     	; 0x2c6 <__divsf3_pse+0x3a>
 2b8:	e0 e8       	ldi	r30, 0x80	; 128
 2ba:	30 d0       	rcall	.+96     	; 0x31c <__divsf3_pse+0x90>
 2bc:	91 50       	subi	r25, 0x01	; 1
 2be:	50 40       	sbci	r21, 0x00	; 0
 2c0:	e6 95       	lsr	r30
 2c2:	00 1c       	adc	r0, r0
 2c4:	ca f7       	brpl	.-14     	; 0x2b8 <__divsf3_pse+0x2c>
 2c6:	29 d0       	rcall	.+82     	; 0x31a <__divsf3_pse+0x8e>
 2c8:	fe 2f       	mov	r31, r30
 2ca:	27 d0       	rcall	.+78     	; 0x31a <__divsf3_pse+0x8e>
 2cc:	66 0f       	add	r22, r22
 2ce:	77 1f       	adc	r23, r23
 2d0:	88 1f       	adc	r24, r24
 2d2:	bb 1f       	adc	r27, r27
 2d4:	26 17       	cp	r18, r22
 2d6:	37 07       	cpc	r19, r23
 2d8:	48 07       	cpc	r20, r24
 2da:	ab 07       	cpc	r26, r27
 2dc:	b0 e8       	ldi	r27, 0x80	; 128
 2de:	09 f0       	breq	.+2      	; 0x2e2 <__divsf3_pse+0x56>
 2e0:	bb 0b       	sbc	r27, r27
 2e2:	80 2d       	mov	r24, r0
 2e4:	bf 01       	movw	r22, r30
 2e6:	ff 27       	eor	r31, r31
 2e8:	93 58       	subi	r25, 0x83	; 131
 2ea:	5f 4f       	sbci	r21, 0xFF	; 255
 2ec:	2a f0       	brmi	.+10     	; 0x2f8 <__divsf3_pse+0x6c>
 2ee:	9e 3f       	cpi	r25, 0xFE	; 254
 2f0:	51 05       	cpc	r21, r1
 2f2:	68 f0       	brcs	.+26     	; 0x30e <__divsf3_pse+0x82>
 2f4:	92 c0       	rjmp	.+292    	; 0x41a <__fp_inf>
 2f6:	dc c0       	rjmp	.+440    	; 0x4b0 <__fp_szero>
 2f8:	5f 3f       	cpi	r21, 0xFF	; 255
 2fa:	ec f3       	brlt	.-6      	; 0x2f6 <__divsf3_pse+0x6a>
 2fc:	98 3e       	cpi	r25, 0xE8	; 232
 2fe:	dc f3       	brlt	.-10     	; 0x2f6 <__divsf3_pse+0x6a>
 300:	86 95       	lsr	r24
 302:	77 95       	ror	r23
 304:	67 95       	ror	r22
 306:	b7 95       	ror	r27
 308:	f7 95       	ror	r31
 30a:	9f 5f       	subi	r25, 0xFF	; 255
 30c:	c9 f7       	brne	.-14     	; 0x300 <__divsf3_pse+0x74>
 30e:	88 0f       	add	r24, r24
 310:	91 1d       	adc	r25, r1
 312:	96 95       	lsr	r25
 314:	87 95       	ror	r24
 316:	97 f9       	bld	r25, 7
 318:	08 95       	ret
 31a:	e1 e0       	ldi	r30, 0x01	; 1
 31c:	66 0f       	add	r22, r22
 31e:	77 1f       	adc	r23, r23
 320:	88 1f       	adc	r24, r24
 322:	bb 1f       	adc	r27, r27
 324:	62 17       	cp	r22, r18
 326:	73 07       	cpc	r23, r19
 328:	84 07       	cpc	r24, r20
 32a:	ba 07       	cpc	r27, r26
 32c:	20 f0       	brcs	.+8      	; 0x336 <__divsf3_pse+0xaa>
 32e:	62 1b       	sub	r22, r18
 330:	73 0b       	sbc	r23, r19
 332:	84 0b       	sbc	r24, r20
 334:	ba 0b       	sbc	r27, r26
 336:	ee 1f       	adc	r30, r30
 338:	88 f7       	brcc	.-30     	; 0x31c <__divsf3_pse+0x90>
 33a:	e0 95       	com	r30
 33c:	08 95       	ret

0000033e <__fixsfsi>:
 33e:	04 d0       	rcall	.+8      	; 0x348 <__fixunssfsi>
 340:	68 94       	set
 342:	b1 11       	cpse	r27, r1
 344:	b5 c0       	rjmp	.+362    	; 0x4b0 <__fp_szero>
 346:	08 95       	ret

00000348 <__fixunssfsi>:
 348:	98 d0       	rcall	.+304    	; 0x47a <__fp_splitA>
 34a:	88 f0       	brcs	.+34     	; 0x36e <__fixunssfsi+0x26>
 34c:	9f 57       	subi	r25, 0x7F	; 127
 34e:	90 f0       	brcs	.+36     	; 0x374 <__fixunssfsi+0x2c>
 350:	b9 2f       	mov	r27, r25
 352:	99 27       	eor	r25, r25
 354:	b7 51       	subi	r27, 0x17	; 23
 356:	a0 f0       	brcs	.+40     	; 0x380 <__fixunssfsi+0x38>
 358:	d1 f0       	breq	.+52     	; 0x38e <__fixunssfsi+0x46>
 35a:	66 0f       	add	r22, r22
 35c:	77 1f       	adc	r23, r23
 35e:	88 1f       	adc	r24, r24
 360:	99 1f       	adc	r25, r25
 362:	1a f0       	brmi	.+6      	; 0x36a <__fixunssfsi+0x22>
 364:	ba 95       	dec	r27
 366:	c9 f7       	brne	.-14     	; 0x35a <__fixunssfsi+0x12>
 368:	12 c0       	rjmp	.+36     	; 0x38e <__fixunssfsi+0x46>
 36a:	b1 30       	cpi	r27, 0x01	; 1
 36c:	81 f0       	breq	.+32     	; 0x38e <__fixunssfsi+0x46>
 36e:	9f d0       	rcall	.+318    	; 0x4ae <__fp_zero>
 370:	b1 e0       	ldi	r27, 0x01	; 1
 372:	08 95       	ret
 374:	9c c0       	rjmp	.+312    	; 0x4ae <__fp_zero>
 376:	67 2f       	mov	r22, r23
 378:	78 2f       	mov	r23, r24
 37a:	88 27       	eor	r24, r24
 37c:	b8 5f       	subi	r27, 0xF8	; 248
 37e:	39 f0       	breq	.+14     	; 0x38e <__fixunssfsi+0x46>
 380:	b9 3f       	cpi	r27, 0xF9	; 249
 382:	cc f3       	brlt	.-14     	; 0x376 <__fixunssfsi+0x2e>
 384:	86 95       	lsr	r24
 386:	77 95       	ror	r23
 388:	67 95       	ror	r22
 38a:	b3 95       	inc	r27
 38c:	d9 f7       	brne	.-10     	; 0x384 <__fixunssfsi+0x3c>
 38e:	3e f4       	brtc	.+14     	; 0x39e <__fixunssfsi+0x56>
 390:	90 95       	com	r25
 392:	80 95       	com	r24
 394:	70 95       	com	r23
 396:	61 95       	neg	r22
 398:	7f 4f       	sbci	r23, 0xFF	; 255
 39a:	8f 4f       	sbci	r24, 0xFF	; 255
 39c:	9f 4f       	sbci	r25, 0xFF	; 255
 39e:	08 95       	ret

000003a0 <__floatunsisf>:
 3a0:	e8 94       	clt
 3a2:	09 c0       	rjmp	.+18     	; 0x3b6 <__floatsisf+0x12>

000003a4 <__floatsisf>:
 3a4:	97 fb       	bst	r25, 7
 3a6:	3e f4       	brtc	.+14     	; 0x3b6 <__floatsisf+0x12>
 3a8:	90 95       	com	r25
 3aa:	80 95       	com	r24
 3ac:	70 95       	com	r23
 3ae:	61 95       	neg	r22
 3b0:	7f 4f       	sbci	r23, 0xFF	; 255
 3b2:	8f 4f       	sbci	r24, 0xFF	; 255
 3b4:	9f 4f       	sbci	r25, 0xFF	; 255
 3b6:	99 23       	and	r25, r25
 3b8:	a9 f0       	breq	.+42     	; 0x3e4 <__floatsisf+0x40>
 3ba:	f9 2f       	mov	r31, r25
 3bc:	96 e9       	ldi	r25, 0x96	; 150
 3be:	bb 27       	eor	r27, r27
 3c0:	93 95       	inc	r25
 3c2:	f6 95       	lsr	r31
 3c4:	87 95       	ror	r24
 3c6:	77 95       	ror	r23
 3c8:	67 95       	ror	r22
 3ca:	b7 95       	ror	r27
 3cc:	f1 11       	cpse	r31, r1
 3ce:	f8 cf       	rjmp	.-16     	; 0x3c0 <__floatsisf+0x1c>
 3d0:	fa f4       	brpl	.+62     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3d2:	bb 0f       	add	r27, r27
 3d4:	11 f4       	brne	.+4      	; 0x3da <__floatsisf+0x36>
 3d6:	60 ff       	sbrs	r22, 0
 3d8:	1b c0       	rjmp	.+54     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3da:	6f 5f       	subi	r22, 0xFF	; 255
 3dc:	7f 4f       	sbci	r23, 0xFF	; 255
 3de:	8f 4f       	sbci	r24, 0xFF	; 255
 3e0:	9f 4f       	sbci	r25, 0xFF	; 255
 3e2:	16 c0       	rjmp	.+44     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3e4:	88 23       	and	r24, r24
 3e6:	11 f0       	breq	.+4      	; 0x3ec <__floatsisf+0x48>
 3e8:	96 e9       	ldi	r25, 0x96	; 150
 3ea:	11 c0       	rjmp	.+34     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3ec:	77 23       	and	r23, r23
 3ee:	21 f0       	breq	.+8      	; 0x3f8 <__floatsisf+0x54>
 3f0:	9e e8       	ldi	r25, 0x8E	; 142
 3f2:	87 2f       	mov	r24, r23
 3f4:	76 2f       	mov	r23, r22
 3f6:	05 c0       	rjmp	.+10     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f8:	66 23       	and	r22, r22
 3fa:	71 f0       	breq	.+28     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3fc:	96 e8       	ldi	r25, 0x86	; 134
 3fe:	86 2f       	mov	r24, r22
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	60 e0       	ldi	r22, 0x00	; 0
 404:	2a f0       	brmi	.+10     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 406:	9a 95       	dec	r25
 408:	66 0f       	add	r22, r22
 40a:	77 1f       	adc	r23, r23
 40c:	88 1f       	adc	r24, r24
 40e:	da f7       	brpl	.-10     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 410:	88 0f       	add	r24, r24
 412:	96 95       	lsr	r25
 414:	87 95       	ror	r24
 416:	97 f9       	bld	r25, 7
 418:	08 95       	ret

0000041a <__fp_inf>:
 41a:	97 f9       	bld	r25, 7
 41c:	9f 67       	ori	r25, 0x7F	; 127
 41e:	80 e8       	ldi	r24, 0x80	; 128
 420:	70 e0       	ldi	r23, 0x00	; 0
 422:	60 e0       	ldi	r22, 0x00	; 0
 424:	08 95       	ret

00000426 <__fp_nan>:
 426:	9f ef       	ldi	r25, 0xFF	; 255
 428:	80 ec       	ldi	r24, 0xC0	; 192
 42a:	08 95       	ret

0000042c <__fp_pscA>:
 42c:	00 24       	eor	r0, r0
 42e:	0a 94       	dec	r0
 430:	16 16       	cp	r1, r22
 432:	17 06       	cpc	r1, r23
 434:	18 06       	cpc	r1, r24
 436:	09 06       	cpc	r0, r25
 438:	08 95       	ret

0000043a <__fp_pscB>:
 43a:	00 24       	eor	r0, r0
 43c:	0a 94       	dec	r0
 43e:	12 16       	cp	r1, r18
 440:	13 06       	cpc	r1, r19
 442:	14 06       	cpc	r1, r20
 444:	05 06       	cpc	r0, r21
 446:	08 95       	ret

00000448 <__fp_round>:
 448:	09 2e       	mov	r0, r25
 44a:	03 94       	inc	r0
 44c:	00 0c       	add	r0, r0
 44e:	11 f4       	brne	.+4      	; 0x454 <__fp_round+0xc>
 450:	88 23       	and	r24, r24
 452:	52 f0       	brmi	.+20     	; 0x468 <__fp_round+0x20>
 454:	bb 0f       	add	r27, r27
 456:	40 f4       	brcc	.+16     	; 0x468 <__fp_round+0x20>
 458:	bf 2b       	or	r27, r31
 45a:	11 f4       	brne	.+4      	; 0x460 <__fp_round+0x18>
 45c:	60 ff       	sbrs	r22, 0
 45e:	04 c0       	rjmp	.+8      	; 0x468 <__fp_round+0x20>
 460:	6f 5f       	subi	r22, 0xFF	; 255
 462:	7f 4f       	sbci	r23, 0xFF	; 255
 464:	8f 4f       	sbci	r24, 0xFF	; 255
 466:	9f 4f       	sbci	r25, 0xFF	; 255
 468:	08 95       	ret

0000046a <__fp_split3>:
 46a:	57 fd       	sbrc	r21, 7
 46c:	90 58       	subi	r25, 0x80	; 128
 46e:	44 0f       	add	r20, r20
 470:	55 1f       	adc	r21, r21
 472:	59 f0       	breq	.+22     	; 0x48a <__fp_splitA+0x10>
 474:	5f 3f       	cpi	r21, 0xFF	; 255
 476:	71 f0       	breq	.+28     	; 0x494 <__fp_splitA+0x1a>
 478:	47 95       	ror	r20

0000047a <__fp_splitA>:
 47a:	88 0f       	add	r24, r24
 47c:	97 fb       	bst	r25, 7
 47e:	99 1f       	adc	r25, r25
 480:	61 f0       	breq	.+24     	; 0x49a <__fp_splitA+0x20>
 482:	9f 3f       	cpi	r25, 0xFF	; 255
 484:	79 f0       	breq	.+30     	; 0x4a4 <__fp_splitA+0x2a>
 486:	87 95       	ror	r24
 488:	08 95       	ret
 48a:	12 16       	cp	r1, r18
 48c:	13 06       	cpc	r1, r19
 48e:	14 06       	cpc	r1, r20
 490:	55 1f       	adc	r21, r21
 492:	f2 cf       	rjmp	.-28     	; 0x478 <__fp_split3+0xe>
 494:	46 95       	lsr	r20
 496:	f1 df       	rcall	.-30     	; 0x47a <__fp_splitA>
 498:	08 c0       	rjmp	.+16     	; 0x4aa <__fp_splitA+0x30>
 49a:	16 16       	cp	r1, r22
 49c:	17 06       	cpc	r1, r23
 49e:	18 06       	cpc	r1, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	f1 cf       	rjmp	.-30     	; 0x486 <__fp_splitA+0xc>
 4a4:	86 95       	lsr	r24
 4a6:	71 05       	cpc	r23, r1
 4a8:	61 05       	cpc	r22, r1
 4aa:	08 94       	sec
 4ac:	08 95       	ret

000004ae <__fp_zero>:
 4ae:	e8 94       	clt

000004b0 <__fp_szero>:
 4b0:	bb 27       	eor	r27, r27
 4b2:	66 27       	eor	r22, r22
 4b4:	77 27       	eor	r23, r23
 4b6:	cb 01       	movw	r24, r22
 4b8:	97 f9       	bld	r25, 7
 4ba:	08 95       	ret

000004bc <__divmodhi4>:
 4bc:	97 fb       	bst	r25, 7
 4be:	07 2e       	mov	r0, r23
 4c0:	16 f4       	brtc	.+4      	; 0x4c6 <__divmodhi4+0xa>
 4c2:	00 94       	com	r0
 4c4:	06 d0       	rcall	.+12     	; 0x4d2 <__divmodhi4_neg1>
 4c6:	77 fd       	sbrc	r23, 7
 4c8:	08 d0       	rcall	.+16     	; 0x4da <__divmodhi4_neg2>
 4ca:	27 d0       	rcall	.+78     	; 0x51a <__udivmodhi4>
 4cc:	07 fc       	sbrc	r0, 7
 4ce:	05 d0       	rcall	.+10     	; 0x4da <__divmodhi4_neg2>
 4d0:	3e f4       	brtc	.+14     	; 0x4e0 <__divmodhi4_exit>

000004d2 <__divmodhi4_neg1>:
 4d2:	90 95       	com	r25
 4d4:	81 95       	neg	r24
 4d6:	9f 4f       	sbci	r25, 0xFF	; 255
 4d8:	08 95       	ret

000004da <__divmodhi4_neg2>:
 4da:	70 95       	com	r23
 4dc:	61 95       	neg	r22
 4de:	7f 4f       	sbci	r23, 0xFF	; 255

000004e0 <__divmodhi4_exit>:
 4e0:	08 95       	ret

000004e2 <__divmodsi4>:
 4e2:	05 2e       	mov	r0, r21
 4e4:	97 fb       	bst	r25, 7
 4e6:	16 f4       	brtc	.+4      	; 0x4ec <__divmodsi4+0xa>
 4e8:	00 94       	com	r0
 4ea:	0f d0       	rcall	.+30     	; 0x50a <__negsi2>
 4ec:	57 fd       	sbrc	r21, 7
 4ee:	05 d0       	rcall	.+10     	; 0x4fa <__divmodsi4_neg2>
 4f0:	28 d0       	rcall	.+80     	; 0x542 <__udivmodsi4>
 4f2:	07 fc       	sbrc	r0, 7
 4f4:	02 d0       	rcall	.+4      	; 0x4fa <__divmodsi4_neg2>
 4f6:	46 f4       	brtc	.+16     	; 0x508 <__divmodsi4_exit>
 4f8:	08 c0       	rjmp	.+16     	; 0x50a <__negsi2>

000004fa <__divmodsi4_neg2>:
 4fa:	50 95       	com	r21
 4fc:	40 95       	com	r20
 4fe:	30 95       	com	r19
 500:	21 95       	neg	r18
 502:	3f 4f       	sbci	r19, 0xFF	; 255
 504:	4f 4f       	sbci	r20, 0xFF	; 255
 506:	5f 4f       	sbci	r21, 0xFF	; 255

00000508 <__divmodsi4_exit>:
 508:	08 95       	ret

0000050a <__negsi2>:
 50a:	90 95       	com	r25
 50c:	80 95       	com	r24
 50e:	70 95       	com	r23
 510:	61 95       	neg	r22
 512:	7f 4f       	sbci	r23, 0xFF	; 255
 514:	8f 4f       	sbci	r24, 0xFF	; 255
 516:	9f 4f       	sbci	r25, 0xFF	; 255
 518:	08 95       	ret

0000051a <__udivmodhi4>:
 51a:	aa 1b       	sub	r26, r26
 51c:	bb 1b       	sub	r27, r27
 51e:	51 e1       	ldi	r21, 0x11	; 17
 520:	07 c0       	rjmp	.+14     	; 0x530 <__udivmodhi4_ep>

00000522 <__udivmodhi4_loop>:
 522:	aa 1f       	adc	r26, r26
 524:	bb 1f       	adc	r27, r27
 526:	a6 17       	cp	r26, r22
 528:	b7 07       	cpc	r27, r23
 52a:	10 f0       	brcs	.+4      	; 0x530 <__udivmodhi4_ep>
 52c:	a6 1b       	sub	r26, r22
 52e:	b7 0b       	sbc	r27, r23

00000530 <__udivmodhi4_ep>:
 530:	88 1f       	adc	r24, r24
 532:	99 1f       	adc	r25, r25
 534:	5a 95       	dec	r21
 536:	a9 f7       	brne	.-22     	; 0x522 <__udivmodhi4_loop>
 538:	80 95       	com	r24
 53a:	90 95       	com	r25
 53c:	bc 01       	movw	r22, r24
 53e:	cd 01       	movw	r24, r26
 540:	08 95       	ret

00000542 <__udivmodsi4>:
 542:	a1 e2       	ldi	r26, 0x21	; 33
 544:	1a 2e       	mov	r1, r26
 546:	aa 1b       	sub	r26, r26
 548:	bb 1b       	sub	r27, r27
 54a:	fd 01       	movw	r30, r26
 54c:	0d c0       	rjmp	.+26     	; 0x568 <__udivmodsi4_ep>

0000054e <__udivmodsi4_loop>:
 54e:	aa 1f       	adc	r26, r26
 550:	bb 1f       	adc	r27, r27
 552:	ee 1f       	adc	r30, r30
 554:	ff 1f       	adc	r31, r31
 556:	a2 17       	cp	r26, r18
 558:	b3 07       	cpc	r27, r19
 55a:	e4 07       	cpc	r30, r20
 55c:	f5 07       	cpc	r31, r21
 55e:	20 f0       	brcs	.+8      	; 0x568 <__udivmodsi4_ep>
 560:	a2 1b       	sub	r26, r18
 562:	b3 0b       	sbc	r27, r19
 564:	e4 0b       	sbc	r30, r20
 566:	f5 0b       	sbc	r31, r21

00000568 <__udivmodsi4_ep>:
 568:	66 1f       	adc	r22, r22
 56a:	77 1f       	adc	r23, r23
 56c:	88 1f       	adc	r24, r24
 56e:	99 1f       	adc	r25, r25
 570:	1a 94       	dec	r1
 572:	69 f7       	brne	.-38     	; 0x54e <__udivmodsi4_loop>
 574:	60 95       	com	r22
 576:	70 95       	com	r23
 578:	80 95       	com	r24
 57a:	90 95       	com	r25
 57c:	9b 01       	movw	r18, r22
 57e:	ac 01       	movw	r20, r24
 580:	bd 01       	movw	r22, r26
 582:	cf 01       	movw	r24, r30
 584:	08 95       	ret

00000586 <_exit>:
 586:	f8 94       	cli

00000588 <__stop_program>:
 588:	ff cf       	rjmp	.-2      	; 0x588 <__stop_program>
