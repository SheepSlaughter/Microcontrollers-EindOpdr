
ThereminCopy.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000656  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005e2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000656  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000656  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000688  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  000006c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ae0  00000000  00000000  0000071c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000969  00000000  00000000  000011fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c8  00000000  00000000  00001b65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00002030  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000485  00000000  00000000  00002130  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000037d  00000000  00000000  000025b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002932  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	ad c0       	rjmp	.+346    	; 0x170 <__vector_5>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	c9 d0       	rcall	.+402    	; 0x23c <main>
  aa:	99 c2       	rjmp	.+1330   	; 0x5de <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <playTune>:
		
	}
}

void playTune(long frequency, long milis)
{
  ae:	8f 92       	push	r8
  b0:	9f 92       	push	r9
  b2:	af 92       	push	r10
  b4:	bf 92       	push	r11
  b6:	cf 92       	push	r12
  b8:	df 92       	push	r13
  ba:	ef 92       	push	r14
  bc:	ff 92       	push	r15
  be:	0f 93       	push	r16
  c0:	1f 93       	push	r17
  c2:	cf 93       	push	r28
  c4:	6b 01       	movw	r12, r22
  c6:	7c 01       	movw	r14, r24
  c8:	49 01       	movw	r8, r18
  ca:	5a 01       	movw	r10, r20
	long t = 0;
	long delay = 8000000L / frequency / 2L;
  cc:	60 e0       	ldi	r22, 0x00	; 0
  ce:	79 e0       	ldi	r23, 0x09	; 9
  d0:	8d e3       	ldi	r24, 0x3D	; 61
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	a7 01       	movw	r20, r14
  d6:	96 01       	movw	r18, r12
  d8:	17 d2       	rcall	.+1070   	; 0x508 <__divmodsi4>
  da:	69 01       	movw	r12, r18
  dc:	7a 01       	movw	r14, r20
	long count = milis * 8000L;
  de:	a0 e4       	ldi	r26, 0x40	; 64
  e0:	bf e1       	ldi	r27, 0x1F	; 31
  e2:	a5 01       	movw	r20, r10
  e4:	94 01       	movw	r18, r8
  e6:	2c d2       	rcall	.+1112   	; 0x540 <__muluhisi3>
  e8:	8b 01       	movw	r16, r22
  ea:	9c 01       	movw	r18, r24
	}
}

void playTune(long frequency, long milis)
{
	long t = 0;
  ec:	40 e0       	ldi	r20, 0x00	; 0
  ee:	50 e0       	ldi	r21, 0x00	; 0
  f0:	ba 01       	movw	r22, r20
	long delay = 8000000L / frequency / 2L;
	long count = milis * 8000L;
	while(t < count)
	{
		if(TCNT3 >= delay)
  f2:	e8 e8       	ldi	r30, 0x88	; 136
  f4:	f0 e0       	ldi	r31, 0x00	; 0
		{
			PORTE ^= (0b00001000);
  f6:	c8 e0       	ldi	r28, 0x08	; 8
void playTune(long frequency, long milis)
{
	long t = 0;
	long delay = 8000000L / frequency / 2L;
	long count = milis * 8000L;
	while(t < count)
  f8:	14 c0       	rjmp	.+40     	; 0x122 <playTune+0x74>
	{
		if(TCNT3 >= delay)
  fa:	80 81       	ld	r24, Z
  fc:	91 81       	ldd	r25, Z+1	; 0x01
  fe:	a0 e0       	ldi	r26, 0x00	; 0
 100:	b0 e0       	ldi	r27, 0x00	; 0
 102:	8c 15       	cp	r24, r12
 104:	9d 05       	cpc	r25, r13
 106:	ae 05       	cpc	r26, r14
 108:	bf 05       	cpc	r27, r15
 10a:	bc f3       	brlt	.-18     	; 0xfa <playTune+0x4c>
		{
			PORTE ^= (0b00001000);
 10c:	83 b1       	in	r24, 0x03	; 3
 10e:	8c 27       	eor	r24, r28
 110:	83 b9       	out	0x03, r24	; 3
			t += TCNT3;
 112:	80 81       	ld	r24, Z
 114:	91 81       	ldd	r25, Z+1	; 0x01
 116:	48 0f       	add	r20, r24
 118:	59 1f       	adc	r21, r25
 11a:	61 1d       	adc	r22, r1
 11c:	71 1d       	adc	r23, r1
			TCNT3 = 0;
 11e:	11 82       	std	Z+1, r1	; 0x01
 120:	10 82       	st	Z, r1
void playTune(long frequency, long milis)
{
	long t = 0;
	long delay = 8000000L / frequency / 2L;
	long count = milis * 8000L;
	while(t < count)
 122:	40 17       	cp	r20, r16
 124:	51 07       	cpc	r21, r17
 126:	62 07       	cpc	r22, r18
 128:	73 07       	cpc	r23, r19
 12a:	54 f4       	brge	.+20     	; 0x140 <playTune+0x92>
	{
		if(TCNT3 >= delay)
 12c:	80 81       	ld	r24, Z
 12e:	91 81       	ldd	r25, Z+1	; 0x01
 130:	a0 e0       	ldi	r26, 0x00	; 0
 132:	b0 e0       	ldi	r27, 0x00	; 0
 134:	8c 15       	cp	r24, r12
 136:	9d 05       	cpc	r25, r13
 138:	ae 05       	cpc	r26, r14
 13a:	bf 05       	cpc	r27, r15
 13c:	3c f7       	brge	.-50     	; 0x10c <playTune+0x5e>
 13e:	dd cf       	rjmp	.-70     	; 0xfa <playTune+0x4c>
			PORTE ^= (0b00001000);
			t += TCNT3;
			TCNT3 = 0;
		}
	}
}
 140:	cf 91       	pop	r28
 142:	1f 91       	pop	r17
 144:	0f 91       	pop	r16
 146:	ff 90       	pop	r15
 148:	ef 90       	pop	r14
 14a:	df 90       	pop	r13
 14c:	cf 90       	pop	r12
 14e:	bf 90       	pop	r11
 150:	af 90       	pop	r10
 152:	9f 90       	pop	r9
 154:	8f 90       	pop	r8
 156:	08 95       	ret

00000158 <echo>:
int distance;

void echo(void){
		
		//digitalWrite(trigPin, HIGH);
		PORTE = 0b00000100;
 158:	84 e0       	ldi	r24, 0x04	; 4
 15a:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15c:	8f ec       	ldi	r24, 0xCF	; 207
 15e:	97 e0       	ldi	r25, 0x07	; 7
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <echo+0x8>
 164:	00 c0       	rjmp	.+0      	; 0x166 <echo+0xe>
 166:	00 00       	nop
		
		//delayMicroseconds(1000);
		_delay_us(1000);
		
		//digitalWrite(trigPin, LOW);
		PORTE = 0b00000000;
 168:	13 b8       	out	0x03, r1	; 3
		TCNT1 = 0;
 16a:	1d bc       	out	0x2d, r1	; 45
 16c:	1c bc       	out	0x2c, r1	; 44
 16e:	08 95       	ret

00000170 <__vector_5>:
}


ISR(INT4_vect)
{
 170:	1f 92       	push	r1
 172:	0f 92       	push	r0
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	0f 92       	push	r0
 178:	11 24       	eor	r1, r1
 17a:	0b b6       	in	r0, 0x3b	; 59
 17c:	0f 92       	push	r0
 17e:	2f 93       	push	r18
 180:	3f 93       	push	r19
 182:	4f 93       	push	r20
 184:	5f 93       	push	r21
 186:	6f 93       	push	r22
 188:	7f 93       	push	r23
 18a:	8f 93       	push	r24
 18c:	9f 93       	push	r25
 18e:	af 93       	push	r26
 190:	bf 93       	push	r27
 192:	cf 93       	push	r28
 194:	df 93       	push	r29
 196:	ef 93       	push	r30
 198:	ff 93       	push	r31
	if (PINE & 0b00010000)
 19a:	0c 9b       	sbis	0x01, 4	; 1
 19c:	0a c0       	rjmp	.+20     	; 0x1b2 <__vector_5+0x42>
	{
		duration = 0;
 19e:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <duration+0x1>
 1a2:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <duration>
		TCNT1 = 0;
 1a6:	1d bc       	out	0x2d, r1	; 45
 1a8:	1c bc       	out	0x2c, r1	; 44
		TCCR1B |= 0b10;	
 1aa:	8e b5       	in	r24, 0x2e	; 46
 1ac:	82 60       	ori	r24, 0x02	; 2
 1ae:	8e bd       	out	0x2e, r24	; 46
 1b0:	30 c0       	rjmp	.+96     	; 0x212 <__vector_5+0xa2>
	}else
	{
		TCCR1B = 0;
 1b2:	1e bc       	out	0x2e, r1	; 46
		duration = TCNT1;
 1b4:	cc b5       	in	r28, 0x2c	; 44
 1b6:	dd b5       	in	r29, 0x2d	; 45
 1b8:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <duration+0x1>
 1bc:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <duration>
		//todo get timer number
		distance = (duration/2) / 29.1;
 1c0:	be 01       	movw	r22, r28
 1c2:	dd 23       	and	r29, r29
 1c4:	14 f4       	brge	.+4      	; 0x1ca <__vector_5+0x5a>
 1c6:	6f 5f       	subi	r22, 0xFF	; 255
 1c8:	7f 4f       	sbci	r23, 0xFF	; 255
 1ca:	75 95       	asr	r23
 1cc:	67 95       	ror	r22
 1ce:	07 2e       	mov	r0, r23
 1d0:	00 0c       	add	r0, r0
 1d2:	88 0b       	sbc	r24, r24
 1d4:	99 0b       	sbc	r25, r25
 1d6:	f9 d0       	rcall	.+498    	; 0x3ca <__floatsisf>
 1d8:	2d ec       	ldi	r18, 0xCD	; 205
 1da:	3c ec       	ldi	r19, 0xCC	; 204
 1dc:	48 ee       	ldi	r20, 0xE8	; 232
 1de:	51 e4       	ldi	r21, 0x41	; 65
 1e0:	59 d0       	rcall	.+178    	; 0x294 <__divsf3>
 1e2:	c0 d0       	rcall	.+384    	; 0x364 <__fixsfsi>
 1e4:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 1e8:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
		PORTB = duration/10;
 1ec:	ce 01       	movw	r24, r28
 1ee:	6a e0       	ldi	r22, 0x0A	; 10
 1f0:	70 e0       	ldi	r23, 0x00	; 0
 1f2:	77 d1       	rcall	.+750    	; 0x4e2 <__divmodhi4>
 1f4:	68 bb       	out	0x18, r22	; 24
		if (distance >= 200 || distance <= 0){
 1f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1fa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 1fe:	9c 01       	movw	r18, r24
 200:	21 50       	subi	r18, 0x01	; 1
 202:	31 09       	sbc	r19, r1
 204:	27 3c       	cpi	r18, 0xC7	; 199
 206:	31 05       	cpc	r19, r1
 208:	18 f0       	brcs	.+6      	; 0x210 <__vector_5+0xa0>
			//Serial.println("Out of range");
			PORTA = 0b11111111;
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	8b bb       	out	0x1b, r24	; 27
 20e:	01 c0       	rjmp	.+2      	; 0x212 <__vector_5+0xa2>
		}
		else {
			//Serial.print(distance);
			//Serial.println(" cm");
			PORTA = distance;
 210:	8b bb       	out	0x1b, r24	; 27
		}
	}
}
 212:	ff 91       	pop	r31
 214:	ef 91       	pop	r30
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	bf 91       	pop	r27
 21c:	af 91       	pop	r26
 21e:	9f 91       	pop	r25
 220:	8f 91       	pop	r24
 222:	7f 91       	pop	r23
 224:	6f 91       	pop	r22
 226:	5f 91       	pop	r21
 228:	4f 91       	pop	r20
 22a:	3f 91       	pop	r19
 22c:	2f 91       	pop	r18
 22e:	0f 90       	pop	r0
 230:	0b be       	out	0x3b, r0	; 59
 232:	0f 90       	pop	r0
 234:	0f be       	out	0x3f, r0	; 63
 236:	0f 90       	pop	r0
 238:	1f 90       	pop	r1
 23a:	18 95       	reti

0000023c <main>:

int main(void)
{
	int tune;
	DDRD = 0b00000100;
 23c:	84 e0       	ldi	r24, 0x04	; 4
 23e:	81 bb       	out	0x11, r24	; 17
	DDRA = 0b11111111;
 240:	8f ef       	ldi	r24, 0xFF	; 255
 242:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0b11111111;
 244:	87 bb       	out	0x17, r24	; 23
	
	EICRB = 0b00000001;
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 0b00010000;
 24a:	80 e1       	ldi	r24, 0x10	; 16
 24c:	89 bf       	out	0x39, r24	; 57
	sei();
 24e:	78 94       	sei
	
	DDRE = 0b00001000;			//set DDRD3 as output
 250:	88 e0       	ldi	r24, 0x08	; 8
 252:	82 b9       	out	0x02, r24	; 2
	TCCR3B |= 0b00000001;	//set up timer
 254:	ea e8       	ldi	r30, 0x8A	; 138
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	81 60       	ori	r24, 0x01	; 1
 25c:	80 83       	st	Z, r24
	while(1)
	{
		echo();
		if(PORTA < 0b11111111){
			tune = 1050 - (PORTA * 4);
 25e:	0a e1       	ldi	r16, 0x1A	; 26
 260:	14 e0       	ldi	r17, 0x04	; 4
	
	DDRE = 0b00001000;			//set DDRD3 as output
	TCCR3B |= 0b00000001;	//set up timer
	while(1)
	{
		echo();
 262:	7a df       	rcall	.-268    	; 0x158 <echo>
		if(PORTA < 0b11111111){
 264:	8b b3       	in	r24, 0x1b	; 27
 266:	8f 3f       	cpi	r24, 0xFF	; 255
 268:	39 f0       	breq	.+14     	; 0x278 <main+0x3c>
			tune = 1050 - (PORTA * 4);
 26a:	8b b3       	in	r24, 0x1b	; 27
 26c:	e8 01       	movw	r28, r16
 26e:	94 e0       	ldi	r25, 0x04	; 4
 270:	89 9f       	mul	r24, r25
 272:	c0 19       	sub	r28, r0
 274:	d1 09       	sbc	r29, r1
 276:	11 24       	eor	r1, r1
		}
		if(tune > 100)
 278:	c5 36       	cpi	r28, 0x65	; 101
 27a:	d1 05       	cpc	r29, r1
 27c:	94 f3       	brlt	.-28     	; 0x262 <main+0x26>
		{
			playTune(tune, 200);
 27e:	28 ec       	ldi	r18, 0xC8	; 200
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	40 e0       	ldi	r20, 0x00	; 0
 284:	50 e0       	ldi	r21, 0x00	; 0
 286:	be 01       	movw	r22, r28
 288:	0d 2e       	mov	r0, r29
 28a:	00 0c       	add	r0, r0
 28c:	88 0b       	sbc	r24, r24
 28e:	99 0b       	sbc	r25, r25
 290:	0e df       	rcall	.-484    	; 0xae <playTune>
 292:	e7 cf       	rjmp	.-50     	; 0x262 <main+0x26>

00000294 <__divsf3>:
 294:	0c d0       	rcall	.+24     	; 0x2ae <__divsf3x>
 296:	eb c0       	rjmp	.+470    	; 0x46e <__fp_round>
 298:	e3 d0       	rcall	.+454    	; 0x460 <__fp_pscB>
 29a:	40 f0       	brcs	.+16     	; 0x2ac <__divsf3+0x18>
 29c:	da d0       	rcall	.+436    	; 0x452 <__fp_pscA>
 29e:	30 f0       	brcs	.+12     	; 0x2ac <__divsf3+0x18>
 2a0:	21 f4       	brne	.+8      	; 0x2aa <__divsf3+0x16>
 2a2:	5f 3f       	cpi	r21, 0xFF	; 255
 2a4:	19 f0       	breq	.+6      	; 0x2ac <__divsf3+0x18>
 2a6:	cc c0       	rjmp	.+408    	; 0x440 <__fp_inf>
 2a8:	51 11       	cpse	r21, r1
 2aa:	15 c1       	rjmp	.+554    	; 0x4d6 <__fp_szero>
 2ac:	cf c0       	rjmp	.+414    	; 0x44c <__fp_nan>

000002ae <__divsf3x>:
 2ae:	f0 d0       	rcall	.+480    	; 0x490 <__fp_split3>
 2b0:	98 f3       	brcs	.-26     	; 0x298 <__divsf3+0x4>

000002b2 <__divsf3_pse>:
 2b2:	99 23       	and	r25, r25
 2b4:	c9 f3       	breq	.-14     	; 0x2a8 <__divsf3+0x14>
 2b6:	55 23       	and	r21, r21
 2b8:	b1 f3       	breq	.-20     	; 0x2a6 <__divsf3+0x12>
 2ba:	95 1b       	sub	r25, r21
 2bc:	55 0b       	sbc	r21, r21
 2be:	bb 27       	eor	r27, r27
 2c0:	aa 27       	eor	r26, r26
 2c2:	62 17       	cp	r22, r18
 2c4:	73 07       	cpc	r23, r19
 2c6:	84 07       	cpc	r24, r20
 2c8:	38 f0       	brcs	.+14     	; 0x2d8 <__divsf3_pse+0x26>
 2ca:	9f 5f       	subi	r25, 0xFF	; 255
 2cc:	5f 4f       	sbci	r21, 0xFF	; 255
 2ce:	22 0f       	add	r18, r18
 2d0:	33 1f       	adc	r19, r19
 2d2:	44 1f       	adc	r20, r20
 2d4:	aa 1f       	adc	r26, r26
 2d6:	a9 f3       	breq	.-22     	; 0x2c2 <__divsf3_pse+0x10>
 2d8:	33 d0       	rcall	.+102    	; 0x340 <__divsf3_pse+0x8e>
 2da:	0e 2e       	mov	r0, r30
 2dc:	3a f0       	brmi	.+14     	; 0x2ec <__divsf3_pse+0x3a>
 2de:	e0 e8       	ldi	r30, 0x80	; 128
 2e0:	30 d0       	rcall	.+96     	; 0x342 <__divsf3_pse+0x90>
 2e2:	91 50       	subi	r25, 0x01	; 1
 2e4:	50 40       	sbci	r21, 0x00	; 0
 2e6:	e6 95       	lsr	r30
 2e8:	00 1c       	adc	r0, r0
 2ea:	ca f7       	brpl	.-14     	; 0x2de <__divsf3_pse+0x2c>
 2ec:	29 d0       	rcall	.+82     	; 0x340 <__divsf3_pse+0x8e>
 2ee:	fe 2f       	mov	r31, r30
 2f0:	27 d0       	rcall	.+78     	; 0x340 <__divsf3_pse+0x8e>
 2f2:	66 0f       	add	r22, r22
 2f4:	77 1f       	adc	r23, r23
 2f6:	88 1f       	adc	r24, r24
 2f8:	bb 1f       	adc	r27, r27
 2fa:	26 17       	cp	r18, r22
 2fc:	37 07       	cpc	r19, r23
 2fe:	48 07       	cpc	r20, r24
 300:	ab 07       	cpc	r26, r27
 302:	b0 e8       	ldi	r27, 0x80	; 128
 304:	09 f0       	breq	.+2      	; 0x308 <__divsf3_pse+0x56>
 306:	bb 0b       	sbc	r27, r27
 308:	80 2d       	mov	r24, r0
 30a:	bf 01       	movw	r22, r30
 30c:	ff 27       	eor	r31, r31
 30e:	93 58       	subi	r25, 0x83	; 131
 310:	5f 4f       	sbci	r21, 0xFF	; 255
 312:	2a f0       	brmi	.+10     	; 0x31e <__divsf3_pse+0x6c>
 314:	9e 3f       	cpi	r25, 0xFE	; 254
 316:	51 05       	cpc	r21, r1
 318:	68 f0       	brcs	.+26     	; 0x334 <__divsf3_pse+0x82>
 31a:	92 c0       	rjmp	.+292    	; 0x440 <__fp_inf>
 31c:	dc c0       	rjmp	.+440    	; 0x4d6 <__fp_szero>
 31e:	5f 3f       	cpi	r21, 0xFF	; 255
 320:	ec f3       	brlt	.-6      	; 0x31c <__divsf3_pse+0x6a>
 322:	98 3e       	cpi	r25, 0xE8	; 232
 324:	dc f3       	brlt	.-10     	; 0x31c <__divsf3_pse+0x6a>
 326:	86 95       	lsr	r24
 328:	77 95       	ror	r23
 32a:	67 95       	ror	r22
 32c:	b7 95       	ror	r27
 32e:	f7 95       	ror	r31
 330:	9f 5f       	subi	r25, 0xFF	; 255
 332:	c9 f7       	brne	.-14     	; 0x326 <__divsf3_pse+0x74>
 334:	88 0f       	add	r24, r24
 336:	91 1d       	adc	r25, r1
 338:	96 95       	lsr	r25
 33a:	87 95       	ror	r24
 33c:	97 f9       	bld	r25, 7
 33e:	08 95       	ret
 340:	e1 e0       	ldi	r30, 0x01	; 1
 342:	66 0f       	add	r22, r22
 344:	77 1f       	adc	r23, r23
 346:	88 1f       	adc	r24, r24
 348:	bb 1f       	adc	r27, r27
 34a:	62 17       	cp	r22, r18
 34c:	73 07       	cpc	r23, r19
 34e:	84 07       	cpc	r24, r20
 350:	ba 07       	cpc	r27, r26
 352:	20 f0       	brcs	.+8      	; 0x35c <__divsf3_pse+0xaa>
 354:	62 1b       	sub	r22, r18
 356:	73 0b       	sbc	r23, r19
 358:	84 0b       	sbc	r24, r20
 35a:	ba 0b       	sbc	r27, r26
 35c:	ee 1f       	adc	r30, r30
 35e:	88 f7       	brcc	.-30     	; 0x342 <__divsf3_pse+0x90>
 360:	e0 95       	com	r30
 362:	08 95       	ret

00000364 <__fixsfsi>:
 364:	04 d0       	rcall	.+8      	; 0x36e <__fixunssfsi>
 366:	68 94       	set
 368:	b1 11       	cpse	r27, r1
 36a:	b5 c0       	rjmp	.+362    	; 0x4d6 <__fp_szero>
 36c:	08 95       	ret

0000036e <__fixunssfsi>:
 36e:	98 d0       	rcall	.+304    	; 0x4a0 <__fp_splitA>
 370:	88 f0       	brcs	.+34     	; 0x394 <__fixunssfsi+0x26>
 372:	9f 57       	subi	r25, 0x7F	; 127
 374:	90 f0       	brcs	.+36     	; 0x39a <__fixunssfsi+0x2c>
 376:	b9 2f       	mov	r27, r25
 378:	99 27       	eor	r25, r25
 37a:	b7 51       	subi	r27, 0x17	; 23
 37c:	a0 f0       	brcs	.+40     	; 0x3a6 <__fixunssfsi+0x38>
 37e:	d1 f0       	breq	.+52     	; 0x3b4 <__fixunssfsi+0x46>
 380:	66 0f       	add	r22, r22
 382:	77 1f       	adc	r23, r23
 384:	88 1f       	adc	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	1a f0       	brmi	.+6      	; 0x390 <__fixunssfsi+0x22>
 38a:	ba 95       	dec	r27
 38c:	c9 f7       	brne	.-14     	; 0x380 <__fixunssfsi+0x12>
 38e:	12 c0       	rjmp	.+36     	; 0x3b4 <__fixunssfsi+0x46>
 390:	b1 30       	cpi	r27, 0x01	; 1
 392:	81 f0       	breq	.+32     	; 0x3b4 <__fixunssfsi+0x46>
 394:	9f d0       	rcall	.+318    	; 0x4d4 <__fp_zero>
 396:	b1 e0       	ldi	r27, 0x01	; 1
 398:	08 95       	ret
 39a:	9c c0       	rjmp	.+312    	; 0x4d4 <__fp_zero>
 39c:	67 2f       	mov	r22, r23
 39e:	78 2f       	mov	r23, r24
 3a0:	88 27       	eor	r24, r24
 3a2:	b8 5f       	subi	r27, 0xF8	; 248
 3a4:	39 f0       	breq	.+14     	; 0x3b4 <__fixunssfsi+0x46>
 3a6:	b9 3f       	cpi	r27, 0xF9	; 249
 3a8:	cc f3       	brlt	.-14     	; 0x39c <__fixunssfsi+0x2e>
 3aa:	86 95       	lsr	r24
 3ac:	77 95       	ror	r23
 3ae:	67 95       	ror	r22
 3b0:	b3 95       	inc	r27
 3b2:	d9 f7       	brne	.-10     	; 0x3aa <__fixunssfsi+0x3c>
 3b4:	3e f4       	brtc	.+14     	; 0x3c4 <__fixunssfsi+0x56>
 3b6:	90 95       	com	r25
 3b8:	80 95       	com	r24
 3ba:	70 95       	com	r23
 3bc:	61 95       	neg	r22
 3be:	7f 4f       	sbci	r23, 0xFF	; 255
 3c0:	8f 4f       	sbci	r24, 0xFF	; 255
 3c2:	9f 4f       	sbci	r25, 0xFF	; 255
 3c4:	08 95       	ret

000003c6 <__floatunsisf>:
 3c6:	e8 94       	clt
 3c8:	09 c0       	rjmp	.+18     	; 0x3dc <__floatsisf+0x12>

000003ca <__floatsisf>:
 3ca:	97 fb       	bst	r25, 7
 3cc:	3e f4       	brtc	.+14     	; 0x3dc <__floatsisf+0x12>
 3ce:	90 95       	com	r25
 3d0:	80 95       	com	r24
 3d2:	70 95       	com	r23
 3d4:	61 95       	neg	r22
 3d6:	7f 4f       	sbci	r23, 0xFF	; 255
 3d8:	8f 4f       	sbci	r24, 0xFF	; 255
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	99 23       	and	r25, r25
 3de:	a9 f0       	breq	.+42     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3e0:	f9 2f       	mov	r31, r25
 3e2:	96 e9       	ldi	r25, 0x96	; 150
 3e4:	bb 27       	eor	r27, r27
 3e6:	93 95       	inc	r25
 3e8:	f6 95       	lsr	r31
 3ea:	87 95       	ror	r24
 3ec:	77 95       	ror	r23
 3ee:	67 95       	ror	r22
 3f0:	b7 95       	ror	r27
 3f2:	f1 11       	cpse	r31, r1
 3f4:	f8 cf       	rjmp	.-16     	; 0x3e6 <__floatsisf+0x1c>
 3f6:	fa f4       	brpl	.+62     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3f8:	bb 0f       	add	r27, r27
 3fa:	11 f4       	brne	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fc:	60 ff       	sbrs	r22, 0
 3fe:	1b c0       	rjmp	.+54     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 400:	6f 5f       	subi	r22, 0xFF	; 255
 402:	7f 4f       	sbci	r23, 0xFF	; 255
 404:	8f 4f       	sbci	r24, 0xFF	; 255
 406:	9f 4f       	sbci	r25, 0xFF	; 255
 408:	16 c0       	rjmp	.+44     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 40a:	88 23       	and	r24, r24
 40c:	11 f0       	breq	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	96 e9       	ldi	r25, 0x96	; 150
 410:	11 c0       	rjmp	.+34     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 412:	77 23       	and	r23, r23
 414:	21 f0       	breq	.+8      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 416:	9e e8       	ldi	r25, 0x8E	; 142
 418:	87 2f       	mov	r24, r23
 41a:	76 2f       	mov	r23, r22
 41c:	05 c0       	rjmp	.+10     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41e:	66 23       	and	r22, r22
 420:	71 f0       	breq	.+28     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 422:	96 e8       	ldi	r25, 0x86	; 134
 424:	86 2f       	mov	r24, r22
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	2a f0       	brmi	.+10     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42c:	9a 95       	dec	r25
 42e:	66 0f       	add	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	da f7       	brpl	.-10     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 436:	88 0f       	add	r24, r24
 438:	96 95       	lsr	r25
 43a:	87 95       	ror	r24
 43c:	97 f9       	bld	r25, 7
 43e:	08 95       	ret

00000440 <__fp_inf>:
 440:	97 f9       	bld	r25, 7
 442:	9f 67       	ori	r25, 0x7F	; 127
 444:	80 e8       	ldi	r24, 0x80	; 128
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	60 e0       	ldi	r22, 0x00	; 0
 44a:	08 95       	ret

0000044c <__fp_nan>:
 44c:	9f ef       	ldi	r25, 0xFF	; 255
 44e:	80 ec       	ldi	r24, 0xC0	; 192
 450:	08 95       	ret

00000452 <__fp_pscA>:
 452:	00 24       	eor	r0, r0
 454:	0a 94       	dec	r0
 456:	16 16       	cp	r1, r22
 458:	17 06       	cpc	r1, r23
 45a:	18 06       	cpc	r1, r24
 45c:	09 06       	cpc	r0, r25
 45e:	08 95       	ret

00000460 <__fp_pscB>:
 460:	00 24       	eor	r0, r0
 462:	0a 94       	dec	r0
 464:	12 16       	cp	r1, r18
 466:	13 06       	cpc	r1, r19
 468:	14 06       	cpc	r1, r20
 46a:	05 06       	cpc	r0, r21
 46c:	08 95       	ret

0000046e <__fp_round>:
 46e:	09 2e       	mov	r0, r25
 470:	03 94       	inc	r0
 472:	00 0c       	add	r0, r0
 474:	11 f4       	brne	.+4      	; 0x47a <__fp_round+0xc>
 476:	88 23       	and	r24, r24
 478:	52 f0       	brmi	.+20     	; 0x48e <__fp_round+0x20>
 47a:	bb 0f       	add	r27, r27
 47c:	40 f4       	brcc	.+16     	; 0x48e <__fp_round+0x20>
 47e:	bf 2b       	or	r27, r31
 480:	11 f4       	brne	.+4      	; 0x486 <__fp_round+0x18>
 482:	60 ff       	sbrs	r22, 0
 484:	04 c0       	rjmp	.+8      	; 0x48e <__fp_round+0x20>
 486:	6f 5f       	subi	r22, 0xFF	; 255
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	8f 4f       	sbci	r24, 0xFF	; 255
 48c:	9f 4f       	sbci	r25, 0xFF	; 255
 48e:	08 95       	ret

00000490 <__fp_split3>:
 490:	57 fd       	sbrc	r21, 7
 492:	90 58       	subi	r25, 0x80	; 128
 494:	44 0f       	add	r20, r20
 496:	55 1f       	adc	r21, r21
 498:	59 f0       	breq	.+22     	; 0x4b0 <__fp_splitA+0x10>
 49a:	5f 3f       	cpi	r21, 0xFF	; 255
 49c:	71 f0       	breq	.+28     	; 0x4ba <__fp_splitA+0x1a>
 49e:	47 95       	ror	r20

000004a0 <__fp_splitA>:
 4a0:	88 0f       	add	r24, r24
 4a2:	97 fb       	bst	r25, 7
 4a4:	99 1f       	adc	r25, r25
 4a6:	61 f0       	breq	.+24     	; 0x4c0 <__fp_splitA+0x20>
 4a8:	9f 3f       	cpi	r25, 0xFF	; 255
 4aa:	79 f0       	breq	.+30     	; 0x4ca <__fp_splitA+0x2a>
 4ac:	87 95       	ror	r24
 4ae:	08 95       	ret
 4b0:	12 16       	cp	r1, r18
 4b2:	13 06       	cpc	r1, r19
 4b4:	14 06       	cpc	r1, r20
 4b6:	55 1f       	adc	r21, r21
 4b8:	f2 cf       	rjmp	.-28     	; 0x49e <__fp_split3+0xe>
 4ba:	46 95       	lsr	r20
 4bc:	f1 df       	rcall	.-30     	; 0x4a0 <__fp_splitA>
 4be:	08 c0       	rjmp	.+16     	; 0x4d0 <__fp_splitA+0x30>
 4c0:	16 16       	cp	r1, r22
 4c2:	17 06       	cpc	r1, r23
 4c4:	18 06       	cpc	r1, r24
 4c6:	99 1f       	adc	r25, r25
 4c8:	f1 cf       	rjmp	.-30     	; 0x4ac <__fp_splitA+0xc>
 4ca:	86 95       	lsr	r24
 4cc:	71 05       	cpc	r23, r1
 4ce:	61 05       	cpc	r22, r1
 4d0:	08 94       	sec
 4d2:	08 95       	ret

000004d4 <__fp_zero>:
 4d4:	e8 94       	clt

000004d6 <__fp_szero>:
 4d6:	bb 27       	eor	r27, r27
 4d8:	66 27       	eor	r22, r22
 4da:	77 27       	eor	r23, r23
 4dc:	cb 01       	movw	r24, r22
 4de:	97 f9       	bld	r25, 7
 4e0:	08 95       	ret

000004e2 <__divmodhi4>:
 4e2:	97 fb       	bst	r25, 7
 4e4:	07 2e       	mov	r0, r23
 4e6:	16 f4       	brtc	.+4      	; 0x4ec <__divmodhi4+0xa>
 4e8:	00 94       	com	r0
 4ea:	06 d0       	rcall	.+12     	; 0x4f8 <__divmodhi4_neg1>
 4ec:	77 fd       	sbrc	r23, 7
 4ee:	08 d0       	rcall	.+16     	; 0x500 <__divmodhi4_neg2>
 4f0:	31 d0       	rcall	.+98     	; 0x554 <__udivmodhi4>
 4f2:	07 fc       	sbrc	r0, 7
 4f4:	05 d0       	rcall	.+10     	; 0x500 <__divmodhi4_neg2>
 4f6:	3e f4       	brtc	.+14     	; 0x506 <__divmodhi4_exit>

000004f8 <__divmodhi4_neg1>:
 4f8:	90 95       	com	r25
 4fa:	81 95       	neg	r24
 4fc:	9f 4f       	sbci	r25, 0xFF	; 255
 4fe:	08 95       	ret

00000500 <__divmodhi4_neg2>:
 500:	70 95       	com	r23
 502:	61 95       	neg	r22
 504:	7f 4f       	sbci	r23, 0xFF	; 255

00000506 <__divmodhi4_exit>:
 506:	08 95       	ret

00000508 <__divmodsi4>:
 508:	05 2e       	mov	r0, r21
 50a:	97 fb       	bst	r25, 7
 50c:	16 f4       	brtc	.+4      	; 0x512 <__divmodsi4+0xa>
 50e:	00 94       	com	r0
 510:	0f d0       	rcall	.+30     	; 0x530 <__negsi2>
 512:	57 fd       	sbrc	r21, 7
 514:	05 d0       	rcall	.+10     	; 0x520 <__divmodsi4_neg2>
 516:	32 d0       	rcall	.+100    	; 0x57c <__udivmodsi4>
 518:	07 fc       	sbrc	r0, 7
 51a:	02 d0       	rcall	.+4      	; 0x520 <__divmodsi4_neg2>
 51c:	46 f4       	brtc	.+16     	; 0x52e <__divmodsi4_exit>
 51e:	08 c0       	rjmp	.+16     	; 0x530 <__negsi2>

00000520 <__divmodsi4_neg2>:
 520:	50 95       	com	r21
 522:	40 95       	com	r20
 524:	30 95       	com	r19
 526:	21 95       	neg	r18
 528:	3f 4f       	sbci	r19, 0xFF	; 255
 52a:	4f 4f       	sbci	r20, 0xFF	; 255
 52c:	5f 4f       	sbci	r21, 0xFF	; 255

0000052e <__divmodsi4_exit>:
 52e:	08 95       	ret

00000530 <__negsi2>:
 530:	90 95       	com	r25
 532:	80 95       	com	r24
 534:	70 95       	com	r23
 536:	61 95       	neg	r22
 538:	7f 4f       	sbci	r23, 0xFF	; 255
 53a:	8f 4f       	sbci	r24, 0xFF	; 255
 53c:	9f 4f       	sbci	r25, 0xFF	; 255
 53e:	08 95       	ret

00000540 <__muluhisi3>:
 540:	3f d0       	rcall	.+126    	; 0x5c0 <__umulhisi3>
 542:	a5 9f       	mul	r26, r21
 544:	90 0d       	add	r25, r0
 546:	b4 9f       	mul	r27, r20
 548:	90 0d       	add	r25, r0
 54a:	a4 9f       	mul	r26, r20
 54c:	80 0d       	add	r24, r0
 54e:	91 1d       	adc	r25, r1
 550:	11 24       	eor	r1, r1
 552:	08 95       	ret

00000554 <__udivmodhi4>:
 554:	aa 1b       	sub	r26, r26
 556:	bb 1b       	sub	r27, r27
 558:	51 e1       	ldi	r21, 0x11	; 17
 55a:	07 c0       	rjmp	.+14     	; 0x56a <__udivmodhi4_ep>

0000055c <__udivmodhi4_loop>:
 55c:	aa 1f       	adc	r26, r26
 55e:	bb 1f       	adc	r27, r27
 560:	a6 17       	cp	r26, r22
 562:	b7 07       	cpc	r27, r23
 564:	10 f0       	brcs	.+4      	; 0x56a <__udivmodhi4_ep>
 566:	a6 1b       	sub	r26, r22
 568:	b7 0b       	sbc	r27, r23

0000056a <__udivmodhi4_ep>:
 56a:	88 1f       	adc	r24, r24
 56c:	99 1f       	adc	r25, r25
 56e:	5a 95       	dec	r21
 570:	a9 f7       	brne	.-22     	; 0x55c <__udivmodhi4_loop>
 572:	80 95       	com	r24
 574:	90 95       	com	r25
 576:	bc 01       	movw	r22, r24
 578:	cd 01       	movw	r24, r26
 57a:	08 95       	ret

0000057c <__udivmodsi4>:
 57c:	a1 e2       	ldi	r26, 0x21	; 33
 57e:	1a 2e       	mov	r1, r26
 580:	aa 1b       	sub	r26, r26
 582:	bb 1b       	sub	r27, r27
 584:	fd 01       	movw	r30, r26
 586:	0d c0       	rjmp	.+26     	; 0x5a2 <__udivmodsi4_ep>

00000588 <__udivmodsi4_loop>:
 588:	aa 1f       	adc	r26, r26
 58a:	bb 1f       	adc	r27, r27
 58c:	ee 1f       	adc	r30, r30
 58e:	ff 1f       	adc	r31, r31
 590:	a2 17       	cp	r26, r18
 592:	b3 07       	cpc	r27, r19
 594:	e4 07       	cpc	r30, r20
 596:	f5 07       	cpc	r31, r21
 598:	20 f0       	brcs	.+8      	; 0x5a2 <__udivmodsi4_ep>
 59a:	a2 1b       	sub	r26, r18
 59c:	b3 0b       	sbc	r27, r19
 59e:	e4 0b       	sbc	r30, r20
 5a0:	f5 0b       	sbc	r31, r21

000005a2 <__udivmodsi4_ep>:
 5a2:	66 1f       	adc	r22, r22
 5a4:	77 1f       	adc	r23, r23
 5a6:	88 1f       	adc	r24, r24
 5a8:	99 1f       	adc	r25, r25
 5aa:	1a 94       	dec	r1
 5ac:	69 f7       	brne	.-38     	; 0x588 <__udivmodsi4_loop>
 5ae:	60 95       	com	r22
 5b0:	70 95       	com	r23
 5b2:	80 95       	com	r24
 5b4:	90 95       	com	r25
 5b6:	9b 01       	movw	r18, r22
 5b8:	ac 01       	movw	r20, r24
 5ba:	bd 01       	movw	r22, r26
 5bc:	cf 01       	movw	r24, r30
 5be:	08 95       	ret

000005c0 <__umulhisi3>:
 5c0:	a2 9f       	mul	r26, r18
 5c2:	b0 01       	movw	r22, r0
 5c4:	b3 9f       	mul	r27, r19
 5c6:	c0 01       	movw	r24, r0
 5c8:	a3 9f       	mul	r26, r19
 5ca:	70 0d       	add	r23, r0
 5cc:	81 1d       	adc	r24, r1
 5ce:	11 24       	eor	r1, r1
 5d0:	91 1d       	adc	r25, r1
 5d2:	b2 9f       	mul	r27, r18
 5d4:	70 0d       	add	r23, r0
 5d6:	81 1d       	adc	r24, r1
 5d8:	11 24       	eor	r1, r1
 5da:	91 1d       	adc	r25, r1
 5dc:	08 95       	ret

000005de <_exit>:
 5de:	f8 94       	cli

000005e0 <__stop_program>:
 5e0:	ff cf       	rjmp	.-2      	; 0x5e0 <__stop_program>
