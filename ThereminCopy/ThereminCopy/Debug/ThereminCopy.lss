
ThereminCopy.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000067e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000060a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  0000067e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000067e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  000006ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b06  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000976  00000000  00000000  0000124a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ce  00000000  00000000  00001bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00002090  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000485  00000000  00000000  00002190  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000037d  00000000  00000000  00002615  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002992  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	be c0       	rjmp	.+380    	; 0x192 <__vector_5>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	da d0       	rcall	.+436    	; 0x25e <main>
  aa:	ad c2       	rjmp	.+1370   	; 0x606 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <playTune>:
		
	}
}

void playTune(long frequency, long milis)
{
  ae:	8f 92       	push	r8
  b0:	9f 92       	push	r9
  b2:	af 92       	push	r10
  b4:	bf 92       	push	r11
  b6:	cf 92       	push	r12
  b8:	df 92       	push	r13
  ba:	ef 92       	push	r14
  bc:	ff 92       	push	r15
  be:	0f 93       	push	r16
  c0:	1f 93       	push	r17
  c2:	cf 93       	push	r28
  c4:	6b 01       	movw	r12, r22
  c6:	7c 01       	movw	r14, r24
  c8:	49 01       	movw	r8, r18
  ca:	5a 01       	movw	r10, r20
	long t = 0;
	long delay = 8000000L / frequency / 2L;
  cc:	60 e0       	ldi	r22, 0x00	; 0
  ce:	79 e0       	ldi	r23, 0x09	; 9
  d0:	8d e3       	ldi	r24, 0x3D	; 61
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	a7 01       	movw	r20, r14
  d6:	96 01       	movw	r18, r12
  d8:	2b d2       	rcall	.+1110   	; 0x530 <__divmodsi4>
  da:	69 01       	movw	r12, r18
  dc:	7a 01       	movw	r14, r20
	long count = milis * 8000L;
  de:	a0 e4       	ldi	r26, 0x40	; 64
  e0:	bf e1       	ldi	r27, 0x1F	; 31
  e2:	a5 01       	movw	r20, r10
  e4:	94 01       	movw	r18, r8
  e6:	40 d2       	rcall	.+1152   	; 0x568 <__muluhisi3>
  e8:	8b 01       	movw	r16, r22
  ea:	9c 01       	movw	r18, r24
	}
}

void playTune(long frequency, long milis)
{
	long t = 0;
  ec:	40 e0       	ldi	r20, 0x00	; 0
  ee:	50 e0       	ldi	r21, 0x00	; 0
  f0:	ba 01       	movw	r22, r20
	long delay = 8000000L / frequency / 2L;
	long count = milis * 8000L;
	while(t < count)
	{
		if(TCNT3 >= delay)
  f2:	e8 e8       	ldi	r30, 0x88	; 136
  f4:	f0 e0       	ldi	r31, 0x00	; 0
		{
			PORTE ^= (0b00001000);
  f6:	c8 e0       	ldi	r28, 0x08	; 8
void playTune(long frequency, long milis)
{
	long t = 0;
	long delay = 8000000L / frequency / 2L;
	long count = milis * 8000L;
	while(t < count)
  f8:	14 c0       	rjmp	.+40     	; 0x122 <playTune+0x74>
	{
		if(TCNT3 >= delay)
  fa:	80 81       	ld	r24, Z
  fc:	91 81       	ldd	r25, Z+1	; 0x01
  fe:	a0 e0       	ldi	r26, 0x00	; 0
 100:	b0 e0       	ldi	r27, 0x00	; 0
 102:	8c 15       	cp	r24, r12
 104:	9d 05       	cpc	r25, r13
 106:	ae 05       	cpc	r26, r14
 108:	bf 05       	cpc	r27, r15
 10a:	bc f3       	brlt	.-18     	; 0xfa <playTune+0x4c>
		{
			PORTE ^= (0b00001000);
 10c:	83 b1       	in	r24, 0x03	; 3
 10e:	8c 27       	eor	r24, r28
 110:	83 b9       	out	0x03, r24	; 3
			t += TCNT3;
 112:	80 81       	ld	r24, Z
 114:	91 81       	ldd	r25, Z+1	; 0x01
 116:	48 0f       	add	r20, r24
 118:	59 1f       	adc	r21, r25
 11a:	61 1d       	adc	r22, r1
 11c:	71 1d       	adc	r23, r1
			TCNT3 = 0;
 11e:	11 82       	std	Z+1, r1	; 0x01
 120:	10 82       	st	Z, r1
void playTune(long frequency, long milis)
{
	long t = 0;
	long delay = 8000000L / frequency / 2L;
	long count = milis * 8000L;
	while(t < count)
 122:	40 17       	cp	r20, r16
 124:	51 07       	cpc	r21, r17
 126:	62 07       	cpc	r22, r18
 128:	73 07       	cpc	r23, r19
 12a:	54 f4       	brge	.+20     	; 0x140 <playTune+0x92>
	{
		if(TCNT3 >= delay)
 12c:	80 81       	ld	r24, Z
 12e:	91 81       	ldd	r25, Z+1	; 0x01
 130:	a0 e0       	ldi	r26, 0x00	; 0
 132:	b0 e0       	ldi	r27, 0x00	; 0
 134:	8c 15       	cp	r24, r12
 136:	9d 05       	cpc	r25, r13
 138:	ae 05       	cpc	r26, r14
 13a:	bf 05       	cpc	r27, r15
 13c:	3c f7       	brge	.-50     	; 0x10c <playTune+0x5e>
 13e:	dd cf       	rjmp	.-70     	; 0xfa <playTune+0x4c>
			PORTE ^= (0b00001000);
			t += TCNT3;
			TCNT3 = 0;
		}
	}
}
 140:	cf 91       	pop	r28
 142:	1f 91       	pop	r17
 144:	0f 91       	pop	r16
 146:	ff 90       	pop	r15
 148:	ef 90       	pop	r14
 14a:	df 90       	pop	r13
 14c:	cf 90       	pop	r12
 14e:	bf 90       	pop	r11
 150:	af 90       	pop	r10
 152:	9f 90       	pop	r9
 154:	8f 90       	pop	r8
 156:	08 95       	ret

00000158 <wait>:

void wait( int ms )

{
	for (int i=0; i<ms; i++)
 158:	18 16       	cp	r1, r24
 15a:	19 06       	cpc	r1, r25
 15c:	6c f4       	brge	.+26     	; 0x178 <wait+0x20>
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 162:	ef ec       	ldi	r30, 0xCF	; 207
 164:	f7 e0       	ldi	r31, 0x07	; 7
 166:	31 97       	sbiw	r30, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <wait+0xe>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <wait+0x14>
 16c:	00 00       	nop
 16e:	2f 5f       	subi	r18, 0xFF	; 255
 170:	3f 4f       	sbci	r19, 0xFF	; 255
 172:	82 17       	cp	r24, r18
 174:	93 07       	cpc	r25, r19
 176:	a9 f7       	brne	.-22     	; 0x162 <wait+0xa>
 178:	08 95       	ret

0000017a <echo>:
int distance;

void echo(void){
		
		//digitalWrite(trigPin, HIGH);
		PORTE = 0b00000100;
 17a:	84 e0       	ldi	r24, 0x04	; 4
 17c:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 17e:	8f ec       	ldi	r24, 0xCF	; 207
 180:	97 e0       	ldi	r25, 0x07	; 7
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <echo+0x8>
 186:	00 c0       	rjmp	.+0      	; 0x188 <echo+0xe>
 188:	00 00       	nop
		
		//delayMicroseconds(1000);
		_delay_us(1000);
		
		//digitalWrite(trigPin, LOW);
		PORTE = 0b00000000;
 18a:	13 b8       	out	0x03, r1	; 3
		TCNT1 = 0;
 18c:	1d bc       	out	0x2d, r1	; 45
 18e:	1c bc       	out	0x2c, r1	; 44
 190:	08 95       	ret

00000192 <__vector_5>:
}


ISR(INT4_vect)
{
 192:	1f 92       	push	r1
 194:	0f 92       	push	r0
 196:	0f b6       	in	r0, 0x3f	; 63
 198:	0f 92       	push	r0
 19a:	11 24       	eor	r1, r1
 19c:	0b b6       	in	r0, 0x3b	; 59
 19e:	0f 92       	push	r0
 1a0:	2f 93       	push	r18
 1a2:	3f 93       	push	r19
 1a4:	4f 93       	push	r20
 1a6:	5f 93       	push	r21
 1a8:	6f 93       	push	r22
 1aa:	7f 93       	push	r23
 1ac:	8f 93       	push	r24
 1ae:	9f 93       	push	r25
 1b0:	af 93       	push	r26
 1b2:	bf 93       	push	r27
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	ef 93       	push	r30
 1ba:	ff 93       	push	r31
	if (PINE & 0b00010000)
 1bc:	0c 9b       	sbis	0x01, 4	; 1
 1be:	0a c0       	rjmp	.+20     	; 0x1d4 <__vector_5+0x42>
	{
		duration = 0;
 1c0:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <duration+0x1>
 1c4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <duration>
		TCNT1 = 0;
 1c8:	1d bc       	out	0x2d, r1	; 45
 1ca:	1c bc       	out	0x2c, r1	; 44
		TCCR1B |= 0b10;	
 1cc:	8e b5       	in	r24, 0x2e	; 46
 1ce:	82 60       	ori	r24, 0x02	; 2
 1d0:	8e bd       	out	0x2e, r24	; 46
 1d2:	30 c0       	rjmp	.+96     	; 0x234 <__vector_5+0xa2>
	}else
	{
		TCCR1B = 0;
 1d4:	1e bc       	out	0x2e, r1	; 46
		duration = TCNT1;
 1d6:	cc b5       	in	r28, 0x2c	; 44
 1d8:	dd b5       	in	r29, 0x2d	; 45
 1da:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <duration+0x1>
 1de:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <duration>
		//todo get timer number
		distance = (duration/2) / 29.1;
 1e2:	be 01       	movw	r22, r28
 1e4:	dd 23       	and	r29, r29
 1e6:	14 f4       	brge	.+4      	; 0x1ec <__vector_5+0x5a>
 1e8:	6f 5f       	subi	r22, 0xFF	; 255
 1ea:	7f 4f       	sbci	r23, 0xFF	; 255
 1ec:	75 95       	asr	r23
 1ee:	67 95       	ror	r22
 1f0:	07 2e       	mov	r0, r23
 1f2:	00 0c       	add	r0, r0
 1f4:	88 0b       	sbc	r24, r24
 1f6:	99 0b       	sbc	r25, r25
 1f8:	fc d0       	rcall	.+504    	; 0x3f2 <__floatsisf>
 1fa:	2d ec       	ldi	r18, 0xCD	; 205
 1fc:	3c ec       	ldi	r19, 0xCC	; 204
 1fe:	48 ee       	ldi	r20, 0xE8	; 232
 200:	51 e4       	ldi	r21, 0x41	; 65
 202:	5c d0       	rcall	.+184    	; 0x2bc <__divsf3>
 204:	c3 d0       	rcall	.+390    	; 0x38c <__fixsfsi>
 206:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 20a:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
		PORTB = duration/10;
 20e:	ce 01       	movw	r24, r28
 210:	6a e0       	ldi	r22, 0x0A	; 10
 212:	70 e0       	ldi	r23, 0x00	; 0
 214:	7a d1       	rcall	.+756    	; 0x50a <__divmodhi4>
 216:	68 bb       	out	0x18, r22	; 24
		if (distance >= 200 || distance <= 0){
 218:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 21c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 220:	9c 01       	movw	r18, r24
 222:	21 50       	subi	r18, 0x01	; 1
 224:	31 09       	sbc	r19, r1
 226:	27 3c       	cpi	r18, 0xC7	; 199
 228:	31 05       	cpc	r19, r1
 22a:	18 f0       	brcs	.+6      	; 0x232 <__vector_5+0xa0>
			//Serial.println("Out of range");
			PORTA = 0b11111111;
 22c:	8f ef       	ldi	r24, 0xFF	; 255
 22e:	8b bb       	out	0x1b, r24	; 27
 230:	01 c0       	rjmp	.+2      	; 0x234 <__vector_5+0xa2>
		}
		else {
			//Serial.print(distance);
			//Serial.println(" cm");
			PORTA = distance;
 232:	8b bb       	out	0x1b, r24	; 27
		}
	}
}
 234:	ff 91       	pop	r31
 236:	ef 91       	pop	r30
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	bf 91       	pop	r27
 23e:	af 91       	pop	r26
 240:	9f 91       	pop	r25
 242:	8f 91       	pop	r24
 244:	7f 91       	pop	r23
 246:	6f 91       	pop	r22
 248:	5f 91       	pop	r21
 24a:	4f 91       	pop	r20
 24c:	3f 91       	pop	r19
 24e:	2f 91       	pop	r18
 250:	0f 90       	pop	r0
 252:	0b be       	out	0x3b, r0	; 59
 254:	0f 90       	pop	r0
 256:	0f be       	out	0x3f, r0	; 63
 258:	0f 90       	pop	r0
 25a:	1f 90       	pop	r1
 25c:	18 95       	reti

0000025e <main>:

int main(void)
{
	int tune;
	DDRD = 0b00000100;
 25e:	84 e0       	ldi	r24, 0x04	; 4
 260:	81 bb       	out	0x11, r24	; 17
	DDRA = 0b11111111;
 262:	8f ef       	ldi	r24, 0xFF	; 255
 264:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0b11111111;
 266:	87 bb       	out	0x17, r24	; 23
	
	EICRB = 0b00000001;
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 0b00010000;
 26c:	80 e1       	ldi	r24, 0x10	; 16
 26e:	89 bf       	out	0x39, r24	; 57
	sei();
 270:	78 94       	sei
	
	DDRE = 0b00001000;			//set DDRD3 as output
 272:	88 e0       	ldi	r24, 0x08	; 8
 274:	82 b9       	out	0x02, r24	; 2
	TCCR3B |= 0b00000001;	//set up timer
 276:	ea e8       	ldi	r30, 0x8A	; 138
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	80 81       	ld	r24, Z
 27c:	81 60       	ori	r24, 0x01	; 1
 27e:	80 83       	st	Z, r24
	while(1)
	{
		echo();
		wait(100);
		if(PORTA < 0b11111111){
			tune = 1050 - (PORTA * 4);
 280:	0a e1       	ldi	r16, 0x1A	; 26
 282:	14 e0       	ldi	r17, 0x04	; 4
	
	DDRE = 0b00001000;			//set DDRD3 as output
	TCCR3B |= 0b00000001;	//set up timer
	while(1)
	{
		echo();
 284:	7a df       	rcall	.-268    	; 0x17a <echo>
		wait(100);
 286:	84 e6       	ldi	r24, 0x64	; 100
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	66 df       	rcall	.-308    	; 0x158 <wait>
		if(PORTA < 0b11111111){
 28c:	8b b3       	in	r24, 0x1b	; 27
 28e:	8f 3f       	cpi	r24, 0xFF	; 255
 290:	39 f0       	breq	.+14     	; 0x2a0 <main+0x42>
			tune = 1050 - (PORTA * 4);
 292:	8b b3       	in	r24, 0x1b	; 27
 294:	e8 01       	movw	r28, r16
 296:	94 e0       	ldi	r25, 0x04	; 4
 298:	89 9f       	mul	r24, r25
 29a:	c0 19       	sub	r28, r0
 29c:	d1 09       	sbc	r29, r1
 29e:	11 24       	eor	r1, r1
		}
		if(tune > 100)
 2a0:	c5 36       	cpi	r28, 0x65	; 101
 2a2:	d1 05       	cpc	r29, r1
 2a4:	7c f3       	brlt	.-34     	; 0x284 <main+0x26>
		{
			playTune(tune, 200);
 2a6:	28 ec       	ldi	r18, 0xC8	; 200
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	40 e0       	ldi	r20, 0x00	; 0
 2ac:	50 e0       	ldi	r21, 0x00	; 0
 2ae:	be 01       	movw	r22, r28
 2b0:	0d 2e       	mov	r0, r29
 2b2:	00 0c       	add	r0, r0
 2b4:	88 0b       	sbc	r24, r24
 2b6:	99 0b       	sbc	r25, r25
 2b8:	fa de       	rcall	.-524    	; 0xae <playTune>
 2ba:	e4 cf       	rjmp	.-56     	; 0x284 <main+0x26>

000002bc <__divsf3>:
 2bc:	0c d0       	rcall	.+24     	; 0x2d6 <__divsf3x>
 2be:	eb c0       	rjmp	.+470    	; 0x496 <__fp_round>
 2c0:	e3 d0       	rcall	.+454    	; 0x488 <__fp_pscB>
 2c2:	40 f0       	brcs	.+16     	; 0x2d4 <__divsf3+0x18>
 2c4:	da d0       	rcall	.+436    	; 0x47a <__fp_pscA>
 2c6:	30 f0       	brcs	.+12     	; 0x2d4 <__divsf3+0x18>
 2c8:	21 f4       	brne	.+8      	; 0x2d2 <__divsf3+0x16>
 2ca:	5f 3f       	cpi	r21, 0xFF	; 255
 2cc:	19 f0       	breq	.+6      	; 0x2d4 <__divsf3+0x18>
 2ce:	cc c0       	rjmp	.+408    	; 0x468 <__fp_inf>
 2d0:	51 11       	cpse	r21, r1
 2d2:	15 c1       	rjmp	.+554    	; 0x4fe <__fp_szero>
 2d4:	cf c0       	rjmp	.+414    	; 0x474 <__fp_nan>

000002d6 <__divsf3x>:
 2d6:	f0 d0       	rcall	.+480    	; 0x4b8 <__fp_split3>
 2d8:	98 f3       	brcs	.-26     	; 0x2c0 <__divsf3+0x4>

000002da <__divsf3_pse>:
 2da:	99 23       	and	r25, r25
 2dc:	c9 f3       	breq	.-14     	; 0x2d0 <__divsf3+0x14>
 2de:	55 23       	and	r21, r21
 2e0:	b1 f3       	breq	.-20     	; 0x2ce <__divsf3+0x12>
 2e2:	95 1b       	sub	r25, r21
 2e4:	55 0b       	sbc	r21, r21
 2e6:	bb 27       	eor	r27, r27
 2e8:	aa 27       	eor	r26, r26
 2ea:	62 17       	cp	r22, r18
 2ec:	73 07       	cpc	r23, r19
 2ee:	84 07       	cpc	r24, r20
 2f0:	38 f0       	brcs	.+14     	; 0x300 <__divsf3_pse+0x26>
 2f2:	9f 5f       	subi	r25, 0xFF	; 255
 2f4:	5f 4f       	sbci	r21, 0xFF	; 255
 2f6:	22 0f       	add	r18, r18
 2f8:	33 1f       	adc	r19, r19
 2fa:	44 1f       	adc	r20, r20
 2fc:	aa 1f       	adc	r26, r26
 2fe:	a9 f3       	breq	.-22     	; 0x2ea <__divsf3_pse+0x10>
 300:	33 d0       	rcall	.+102    	; 0x368 <__divsf3_pse+0x8e>
 302:	0e 2e       	mov	r0, r30
 304:	3a f0       	brmi	.+14     	; 0x314 <__divsf3_pse+0x3a>
 306:	e0 e8       	ldi	r30, 0x80	; 128
 308:	30 d0       	rcall	.+96     	; 0x36a <__divsf3_pse+0x90>
 30a:	91 50       	subi	r25, 0x01	; 1
 30c:	50 40       	sbci	r21, 0x00	; 0
 30e:	e6 95       	lsr	r30
 310:	00 1c       	adc	r0, r0
 312:	ca f7       	brpl	.-14     	; 0x306 <__divsf3_pse+0x2c>
 314:	29 d0       	rcall	.+82     	; 0x368 <__divsf3_pse+0x8e>
 316:	fe 2f       	mov	r31, r30
 318:	27 d0       	rcall	.+78     	; 0x368 <__divsf3_pse+0x8e>
 31a:	66 0f       	add	r22, r22
 31c:	77 1f       	adc	r23, r23
 31e:	88 1f       	adc	r24, r24
 320:	bb 1f       	adc	r27, r27
 322:	26 17       	cp	r18, r22
 324:	37 07       	cpc	r19, r23
 326:	48 07       	cpc	r20, r24
 328:	ab 07       	cpc	r26, r27
 32a:	b0 e8       	ldi	r27, 0x80	; 128
 32c:	09 f0       	breq	.+2      	; 0x330 <__divsf3_pse+0x56>
 32e:	bb 0b       	sbc	r27, r27
 330:	80 2d       	mov	r24, r0
 332:	bf 01       	movw	r22, r30
 334:	ff 27       	eor	r31, r31
 336:	93 58       	subi	r25, 0x83	; 131
 338:	5f 4f       	sbci	r21, 0xFF	; 255
 33a:	2a f0       	brmi	.+10     	; 0x346 <__divsf3_pse+0x6c>
 33c:	9e 3f       	cpi	r25, 0xFE	; 254
 33e:	51 05       	cpc	r21, r1
 340:	68 f0       	brcs	.+26     	; 0x35c <__divsf3_pse+0x82>
 342:	92 c0       	rjmp	.+292    	; 0x468 <__fp_inf>
 344:	dc c0       	rjmp	.+440    	; 0x4fe <__fp_szero>
 346:	5f 3f       	cpi	r21, 0xFF	; 255
 348:	ec f3       	brlt	.-6      	; 0x344 <__divsf3_pse+0x6a>
 34a:	98 3e       	cpi	r25, 0xE8	; 232
 34c:	dc f3       	brlt	.-10     	; 0x344 <__divsf3_pse+0x6a>
 34e:	86 95       	lsr	r24
 350:	77 95       	ror	r23
 352:	67 95       	ror	r22
 354:	b7 95       	ror	r27
 356:	f7 95       	ror	r31
 358:	9f 5f       	subi	r25, 0xFF	; 255
 35a:	c9 f7       	brne	.-14     	; 0x34e <__divsf3_pse+0x74>
 35c:	88 0f       	add	r24, r24
 35e:	91 1d       	adc	r25, r1
 360:	96 95       	lsr	r25
 362:	87 95       	ror	r24
 364:	97 f9       	bld	r25, 7
 366:	08 95       	ret
 368:	e1 e0       	ldi	r30, 0x01	; 1
 36a:	66 0f       	add	r22, r22
 36c:	77 1f       	adc	r23, r23
 36e:	88 1f       	adc	r24, r24
 370:	bb 1f       	adc	r27, r27
 372:	62 17       	cp	r22, r18
 374:	73 07       	cpc	r23, r19
 376:	84 07       	cpc	r24, r20
 378:	ba 07       	cpc	r27, r26
 37a:	20 f0       	brcs	.+8      	; 0x384 <__divsf3_pse+0xaa>
 37c:	62 1b       	sub	r22, r18
 37e:	73 0b       	sbc	r23, r19
 380:	84 0b       	sbc	r24, r20
 382:	ba 0b       	sbc	r27, r26
 384:	ee 1f       	adc	r30, r30
 386:	88 f7       	brcc	.-30     	; 0x36a <__divsf3_pse+0x90>
 388:	e0 95       	com	r30
 38a:	08 95       	ret

0000038c <__fixsfsi>:
 38c:	04 d0       	rcall	.+8      	; 0x396 <__fixunssfsi>
 38e:	68 94       	set
 390:	b1 11       	cpse	r27, r1
 392:	b5 c0       	rjmp	.+362    	; 0x4fe <__fp_szero>
 394:	08 95       	ret

00000396 <__fixunssfsi>:
 396:	98 d0       	rcall	.+304    	; 0x4c8 <__fp_splitA>
 398:	88 f0       	brcs	.+34     	; 0x3bc <__fixunssfsi+0x26>
 39a:	9f 57       	subi	r25, 0x7F	; 127
 39c:	90 f0       	brcs	.+36     	; 0x3c2 <__fixunssfsi+0x2c>
 39e:	b9 2f       	mov	r27, r25
 3a0:	99 27       	eor	r25, r25
 3a2:	b7 51       	subi	r27, 0x17	; 23
 3a4:	a0 f0       	brcs	.+40     	; 0x3ce <__fixunssfsi+0x38>
 3a6:	d1 f0       	breq	.+52     	; 0x3dc <__fixunssfsi+0x46>
 3a8:	66 0f       	add	r22, r22
 3aa:	77 1f       	adc	r23, r23
 3ac:	88 1f       	adc	r24, r24
 3ae:	99 1f       	adc	r25, r25
 3b0:	1a f0       	brmi	.+6      	; 0x3b8 <__fixunssfsi+0x22>
 3b2:	ba 95       	dec	r27
 3b4:	c9 f7       	brne	.-14     	; 0x3a8 <__fixunssfsi+0x12>
 3b6:	12 c0       	rjmp	.+36     	; 0x3dc <__fixunssfsi+0x46>
 3b8:	b1 30       	cpi	r27, 0x01	; 1
 3ba:	81 f0       	breq	.+32     	; 0x3dc <__fixunssfsi+0x46>
 3bc:	9f d0       	rcall	.+318    	; 0x4fc <__fp_zero>
 3be:	b1 e0       	ldi	r27, 0x01	; 1
 3c0:	08 95       	ret
 3c2:	9c c0       	rjmp	.+312    	; 0x4fc <__fp_zero>
 3c4:	67 2f       	mov	r22, r23
 3c6:	78 2f       	mov	r23, r24
 3c8:	88 27       	eor	r24, r24
 3ca:	b8 5f       	subi	r27, 0xF8	; 248
 3cc:	39 f0       	breq	.+14     	; 0x3dc <__fixunssfsi+0x46>
 3ce:	b9 3f       	cpi	r27, 0xF9	; 249
 3d0:	cc f3       	brlt	.-14     	; 0x3c4 <__fixunssfsi+0x2e>
 3d2:	86 95       	lsr	r24
 3d4:	77 95       	ror	r23
 3d6:	67 95       	ror	r22
 3d8:	b3 95       	inc	r27
 3da:	d9 f7       	brne	.-10     	; 0x3d2 <__fixunssfsi+0x3c>
 3dc:	3e f4       	brtc	.+14     	; 0x3ec <__fixunssfsi+0x56>
 3de:	90 95       	com	r25
 3e0:	80 95       	com	r24
 3e2:	70 95       	com	r23
 3e4:	61 95       	neg	r22
 3e6:	7f 4f       	sbci	r23, 0xFF	; 255
 3e8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ea:	9f 4f       	sbci	r25, 0xFF	; 255
 3ec:	08 95       	ret

000003ee <__floatunsisf>:
 3ee:	e8 94       	clt
 3f0:	09 c0       	rjmp	.+18     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>

000003f2 <__floatsisf>:
 3f2:	97 fb       	bst	r25, 7
 3f4:	3e f4       	brtc	.+14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f6:	90 95       	com	r25
 3f8:	80 95       	com	r24
 3fa:	70 95       	com	r23
 3fc:	61 95       	neg	r22
 3fe:	7f 4f       	sbci	r23, 0xFF	; 255
 400:	8f 4f       	sbci	r24, 0xFF	; 255
 402:	9f 4f       	sbci	r25, 0xFF	; 255
 404:	99 23       	and	r25, r25
 406:	a9 f0       	breq	.+42     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 408:	f9 2f       	mov	r31, r25
 40a:	96 e9       	ldi	r25, 0x96	; 150
 40c:	bb 27       	eor	r27, r27
 40e:	93 95       	inc	r25
 410:	f6 95       	lsr	r31
 412:	87 95       	ror	r24
 414:	77 95       	ror	r23
 416:	67 95       	ror	r22
 418:	b7 95       	ror	r27
 41a:	f1 11       	cpse	r31, r1
 41c:	f8 cf       	rjmp	.-16     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 41e:	fa f4       	brpl	.+62     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 420:	bb 0f       	add	r27, r27
 422:	11 f4       	brne	.+4      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 424:	60 ff       	sbrs	r22, 0
 426:	1b c0       	rjmp	.+54     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 428:	6f 5f       	subi	r22, 0xFF	; 255
 42a:	7f 4f       	sbci	r23, 0xFF	; 255
 42c:	8f 4f       	sbci	r24, 0xFF	; 255
 42e:	9f 4f       	sbci	r25, 0xFF	; 255
 430:	16 c0       	rjmp	.+44     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 432:	88 23       	and	r24, r24
 434:	11 f0       	breq	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 436:	96 e9       	ldi	r25, 0x96	; 150
 438:	11 c0       	rjmp	.+34     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 43a:	77 23       	and	r23, r23
 43c:	21 f0       	breq	.+8      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 43e:	9e e8       	ldi	r25, 0x8E	; 142
 440:	87 2f       	mov	r24, r23
 442:	76 2f       	mov	r23, r22
 444:	05 c0       	rjmp	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 446:	66 23       	and	r22, r22
 448:	71 f0       	breq	.+28     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 44a:	96 e8       	ldi	r25, 0x86	; 134
 44c:	86 2f       	mov	r24, r22
 44e:	70 e0       	ldi	r23, 0x00	; 0
 450:	60 e0       	ldi	r22, 0x00	; 0
 452:	2a f0       	brmi	.+10     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 454:	9a 95       	dec	r25
 456:	66 0f       	add	r22, r22
 458:	77 1f       	adc	r23, r23
 45a:	88 1f       	adc	r24, r24
 45c:	da f7       	brpl	.-10     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 45e:	88 0f       	add	r24, r24
 460:	96 95       	lsr	r25
 462:	87 95       	ror	r24
 464:	97 f9       	bld	r25, 7
 466:	08 95       	ret

00000468 <__fp_inf>:
 468:	97 f9       	bld	r25, 7
 46a:	9f 67       	ori	r25, 0x7F	; 127
 46c:	80 e8       	ldi	r24, 0x80	; 128
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	60 e0       	ldi	r22, 0x00	; 0
 472:	08 95       	ret

00000474 <__fp_nan>:
 474:	9f ef       	ldi	r25, 0xFF	; 255
 476:	80 ec       	ldi	r24, 0xC0	; 192
 478:	08 95       	ret

0000047a <__fp_pscA>:
 47a:	00 24       	eor	r0, r0
 47c:	0a 94       	dec	r0
 47e:	16 16       	cp	r1, r22
 480:	17 06       	cpc	r1, r23
 482:	18 06       	cpc	r1, r24
 484:	09 06       	cpc	r0, r25
 486:	08 95       	ret

00000488 <__fp_pscB>:
 488:	00 24       	eor	r0, r0
 48a:	0a 94       	dec	r0
 48c:	12 16       	cp	r1, r18
 48e:	13 06       	cpc	r1, r19
 490:	14 06       	cpc	r1, r20
 492:	05 06       	cpc	r0, r21
 494:	08 95       	ret

00000496 <__fp_round>:
 496:	09 2e       	mov	r0, r25
 498:	03 94       	inc	r0
 49a:	00 0c       	add	r0, r0
 49c:	11 f4       	brne	.+4      	; 0x4a2 <__fp_round+0xc>
 49e:	88 23       	and	r24, r24
 4a0:	52 f0       	brmi	.+20     	; 0x4b6 <__fp_round+0x20>
 4a2:	bb 0f       	add	r27, r27
 4a4:	40 f4       	brcc	.+16     	; 0x4b6 <__fp_round+0x20>
 4a6:	bf 2b       	or	r27, r31
 4a8:	11 f4       	brne	.+4      	; 0x4ae <__fp_round+0x18>
 4aa:	60 ff       	sbrs	r22, 0
 4ac:	04 c0       	rjmp	.+8      	; 0x4b6 <__fp_round+0x20>
 4ae:	6f 5f       	subi	r22, 0xFF	; 255
 4b0:	7f 4f       	sbci	r23, 0xFF	; 255
 4b2:	8f 4f       	sbci	r24, 0xFF	; 255
 4b4:	9f 4f       	sbci	r25, 0xFF	; 255
 4b6:	08 95       	ret

000004b8 <__fp_split3>:
 4b8:	57 fd       	sbrc	r21, 7
 4ba:	90 58       	subi	r25, 0x80	; 128
 4bc:	44 0f       	add	r20, r20
 4be:	55 1f       	adc	r21, r21
 4c0:	59 f0       	breq	.+22     	; 0x4d8 <__fp_splitA+0x10>
 4c2:	5f 3f       	cpi	r21, 0xFF	; 255
 4c4:	71 f0       	breq	.+28     	; 0x4e2 <__fp_splitA+0x1a>
 4c6:	47 95       	ror	r20

000004c8 <__fp_splitA>:
 4c8:	88 0f       	add	r24, r24
 4ca:	97 fb       	bst	r25, 7
 4cc:	99 1f       	adc	r25, r25
 4ce:	61 f0       	breq	.+24     	; 0x4e8 <__fp_splitA+0x20>
 4d0:	9f 3f       	cpi	r25, 0xFF	; 255
 4d2:	79 f0       	breq	.+30     	; 0x4f2 <__fp_splitA+0x2a>
 4d4:	87 95       	ror	r24
 4d6:	08 95       	ret
 4d8:	12 16       	cp	r1, r18
 4da:	13 06       	cpc	r1, r19
 4dc:	14 06       	cpc	r1, r20
 4de:	55 1f       	adc	r21, r21
 4e0:	f2 cf       	rjmp	.-28     	; 0x4c6 <__fp_split3+0xe>
 4e2:	46 95       	lsr	r20
 4e4:	f1 df       	rcall	.-30     	; 0x4c8 <__fp_splitA>
 4e6:	08 c0       	rjmp	.+16     	; 0x4f8 <__fp_splitA+0x30>
 4e8:	16 16       	cp	r1, r22
 4ea:	17 06       	cpc	r1, r23
 4ec:	18 06       	cpc	r1, r24
 4ee:	99 1f       	adc	r25, r25
 4f0:	f1 cf       	rjmp	.-30     	; 0x4d4 <__fp_splitA+0xc>
 4f2:	86 95       	lsr	r24
 4f4:	71 05       	cpc	r23, r1
 4f6:	61 05       	cpc	r22, r1
 4f8:	08 94       	sec
 4fa:	08 95       	ret

000004fc <__fp_zero>:
 4fc:	e8 94       	clt

000004fe <__fp_szero>:
 4fe:	bb 27       	eor	r27, r27
 500:	66 27       	eor	r22, r22
 502:	77 27       	eor	r23, r23
 504:	cb 01       	movw	r24, r22
 506:	97 f9       	bld	r25, 7
 508:	08 95       	ret

0000050a <__divmodhi4>:
 50a:	97 fb       	bst	r25, 7
 50c:	07 2e       	mov	r0, r23
 50e:	16 f4       	brtc	.+4      	; 0x514 <__divmodhi4+0xa>
 510:	00 94       	com	r0
 512:	06 d0       	rcall	.+12     	; 0x520 <__divmodhi4_neg1>
 514:	77 fd       	sbrc	r23, 7
 516:	08 d0       	rcall	.+16     	; 0x528 <__divmodhi4_neg2>
 518:	31 d0       	rcall	.+98     	; 0x57c <__udivmodhi4>
 51a:	07 fc       	sbrc	r0, 7
 51c:	05 d0       	rcall	.+10     	; 0x528 <__divmodhi4_neg2>
 51e:	3e f4       	brtc	.+14     	; 0x52e <__divmodhi4_exit>

00000520 <__divmodhi4_neg1>:
 520:	90 95       	com	r25
 522:	81 95       	neg	r24
 524:	9f 4f       	sbci	r25, 0xFF	; 255
 526:	08 95       	ret

00000528 <__divmodhi4_neg2>:
 528:	70 95       	com	r23
 52a:	61 95       	neg	r22
 52c:	7f 4f       	sbci	r23, 0xFF	; 255

0000052e <__divmodhi4_exit>:
 52e:	08 95       	ret

00000530 <__divmodsi4>:
 530:	05 2e       	mov	r0, r21
 532:	97 fb       	bst	r25, 7
 534:	16 f4       	brtc	.+4      	; 0x53a <__divmodsi4+0xa>
 536:	00 94       	com	r0
 538:	0f d0       	rcall	.+30     	; 0x558 <__negsi2>
 53a:	57 fd       	sbrc	r21, 7
 53c:	05 d0       	rcall	.+10     	; 0x548 <__divmodsi4_neg2>
 53e:	32 d0       	rcall	.+100    	; 0x5a4 <__udivmodsi4>
 540:	07 fc       	sbrc	r0, 7
 542:	02 d0       	rcall	.+4      	; 0x548 <__divmodsi4_neg2>
 544:	46 f4       	brtc	.+16     	; 0x556 <__divmodsi4_exit>
 546:	08 c0       	rjmp	.+16     	; 0x558 <__negsi2>

00000548 <__divmodsi4_neg2>:
 548:	50 95       	com	r21
 54a:	40 95       	com	r20
 54c:	30 95       	com	r19
 54e:	21 95       	neg	r18
 550:	3f 4f       	sbci	r19, 0xFF	; 255
 552:	4f 4f       	sbci	r20, 0xFF	; 255
 554:	5f 4f       	sbci	r21, 0xFF	; 255

00000556 <__divmodsi4_exit>:
 556:	08 95       	ret

00000558 <__negsi2>:
 558:	90 95       	com	r25
 55a:	80 95       	com	r24
 55c:	70 95       	com	r23
 55e:	61 95       	neg	r22
 560:	7f 4f       	sbci	r23, 0xFF	; 255
 562:	8f 4f       	sbci	r24, 0xFF	; 255
 564:	9f 4f       	sbci	r25, 0xFF	; 255
 566:	08 95       	ret

00000568 <__muluhisi3>:
 568:	3f d0       	rcall	.+126    	; 0x5e8 <__umulhisi3>
 56a:	a5 9f       	mul	r26, r21
 56c:	90 0d       	add	r25, r0
 56e:	b4 9f       	mul	r27, r20
 570:	90 0d       	add	r25, r0
 572:	a4 9f       	mul	r26, r20
 574:	80 0d       	add	r24, r0
 576:	91 1d       	adc	r25, r1
 578:	11 24       	eor	r1, r1
 57a:	08 95       	ret

0000057c <__udivmodhi4>:
 57c:	aa 1b       	sub	r26, r26
 57e:	bb 1b       	sub	r27, r27
 580:	51 e1       	ldi	r21, 0x11	; 17
 582:	07 c0       	rjmp	.+14     	; 0x592 <__udivmodhi4_ep>

00000584 <__udivmodhi4_loop>:
 584:	aa 1f       	adc	r26, r26
 586:	bb 1f       	adc	r27, r27
 588:	a6 17       	cp	r26, r22
 58a:	b7 07       	cpc	r27, r23
 58c:	10 f0       	brcs	.+4      	; 0x592 <__udivmodhi4_ep>
 58e:	a6 1b       	sub	r26, r22
 590:	b7 0b       	sbc	r27, r23

00000592 <__udivmodhi4_ep>:
 592:	88 1f       	adc	r24, r24
 594:	99 1f       	adc	r25, r25
 596:	5a 95       	dec	r21
 598:	a9 f7       	brne	.-22     	; 0x584 <__udivmodhi4_loop>
 59a:	80 95       	com	r24
 59c:	90 95       	com	r25
 59e:	bc 01       	movw	r22, r24
 5a0:	cd 01       	movw	r24, r26
 5a2:	08 95       	ret

000005a4 <__udivmodsi4>:
 5a4:	a1 e2       	ldi	r26, 0x21	; 33
 5a6:	1a 2e       	mov	r1, r26
 5a8:	aa 1b       	sub	r26, r26
 5aa:	bb 1b       	sub	r27, r27
 5ac:	fd 01       	movw	r30, r26
 5ae:	0d c0       	rjmp	.+26     	; 0x5ca <__udivmodsi4_ep>

000005b0 <__udivmodsi4_loop>:
 5b0:	aa 1f       	adc	r26, r26
 5b2:	bb 1f       	adc	r27, r27
 5b4:	ee 1f       	adc	r30, r30
 5b6:	ff 1f       	adc	r31, r31
 5b8:	a2 17       	cp	r26, r18
 5ba:	b3 07       	cpc	r27, r19
 5bc:	e4 07       	cpc	r30, r20
 5be:	f5 07       	cpc	r31, r21
 5c0:	20 f0       	brcs	.+8      	; 0x5ca <__udivmodsi4_ep>
 5c2:	a2 1b       	sub	r26, r18
 5c4:	b3 0b       	sbc	r27, r19
 5c6:	e4 0b       	sbc	r30, r20
 5c8:	f5 0b       	sbc	r31, r21

000005ca <__udivmodsi4_ep>:
 5ca:	66 1f       	adc	r22, r22
 5cc:	77 1f       	adc	r23, r23
 5ce:	88 1f       	adc	r24, r24
 5d0:	99 1f       	adc	r25, r25
 5d2:	1a 94       	dec	r1
 5d4:	69 f7       	brne	.-38     	; 0x5b0 <__udivmodsi4_loop>
 5d6:	60 95       	com	r22
 5d8:	70 95       	com	r23
 5da:	80 95       	com	r24
 5dc:	90 95       	com	r25
 5de:	9b 01       	movw	r18, r22
 5e0:	ac 01       	movw	r20, r24
 5e2:	bd 01       	movw	r22, r26
 5e4:	cf 01       	movw	r24, r30
 5e6:	08 95       	ret

000005e8 <__umulhisi3>:
 5e8:	a2 9f       	mul	r26, r18
 5ea:	b0 01       	movw	r22, r0
 5ec:	b3 9f       	mul	r27, r19
 5ee:	c0 01       	movw	r24, r0
 5f0:	a3 9f       	mul	r26, r19
 5f2:	70 0d       	add	r23, r0
 5f4:	81 1d       	adc	r24, r1
 5f6:	11 24       	eor	r1, r1
 5f8:	91 1d       	adc	r25, r1
 5fa:	b2 9f       	mul	r27, r18
 5fc:	70 0d       	add	r23, r0
 5fe:	81 1d       	adc	r24, r1
 600:	11 24       	eor	r1, r1
 602:	91 1d       	adc	r25, r1
 604:	08 95       	ret

00000606 <_exit>:
 606:	f8 94       	cli

00000608 <__stop_program>:
 608:	ff cf       	rjmp	.-2      	; 0x608 <__stop_program>
